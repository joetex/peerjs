{"version":3,"sources":["../node_modules/peerjs-js-binarypack/lib/bufferbuilder.js","../node_modules/peerjs-js-binarypack/lib/binarypack.js","supports.ts","util.ts","../node_modules/eventemitter3/index.js","logger.ts","enums.ts","socket.ts","negotiator.ts","baseconnection.ts","mediaconnection.ts","encodingQueue.ts","dataconnection.ts","api.ts","peer.ts","exports.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChcC1gBA;;;;;;;;;;;AAEa,OAAA,CAAA,QAAA,GAAW;AAAA;AAAA;AAAK,oBAAA;AAAA;;AAChB,SAAA,KAAA,GAAQ,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,EAA2B,QAA3B,CAAoC,SAAS,CAAC,QAA9C,CAAR;AACA,SAAA,iBAAA,GAAoB,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,CAApB;AAEA,SAAA,iBAAA,GAAoB,EAApB;AACA,SAAA,gBAAA,GAAmB,EAAnB;AACA,SAAA,gBAAA,GAAmB,GAAnB;AAkEZ;;AAxEuB;AAAA;AAAA,wCAQH;AACb,aAAO,OAAO,iBAAP,KAA6B,WAApC;AACH;AAVmB;AAAA;AAAA,yCAYF;AACd,UAAM,OAAO,GAAG,KAAK,UAAL,EAAhB;AACA,UAAM,OAAO,GAAG,KAAK,UAAL,EAAhB;AAEA,UAAM,YAAY,GAAG,KAAK,iBAAL,CAAuB,QAAvB,CAAgC,OAAhC,CAArB;AAEA,UAAI,CAAC,YAAL,EAAmB,OAAO,KAAP;AAEnB,UAAI,OAAO,KAAK,QAAhB,EAA0B,OAAO,OAAO,IAAI,KAAK,gBAAvB;AAC1B,UAAI,OAAO,KAAK,SAAhB,EAA2B,OAAO,OAAO,IAAI,KAAK,iBAAvB;AAC3B,UAAI,OAAO,KAAK,QAAhB,EAA0B,OAAO,CAAC,KAAK,KAAN,IAAe,OAAO,IAAI,KAAK,gBAAtC;AAE1B,aAAO,KAAP;AACH;AAzBmB;AAAA;AAAA,iCA2BV;AACN;AACA,aAAO,QAAP;AACH;AA9BmB;AAAA;AAAA,iCAgCV;AACN;AACA,aAAO,KAAK,gBAAZ;AACH;AAnCmB;AAAA;AAAA,6CAqCE;AAClB;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,aAAO,KAAP;AACH;AA7DmB;AAAA;AAAA,+BA+DZ;AACJ,+CACM,KAAK,UAAL,EADN,4BAEM,KAAK,UAAL,EAFN,0BAGI,KAAK,KAHT,sCAIgB,KAAK,iBAAL,EAJhB,uCAKiB,KAAK,kBAAL,EALjB,2CAMqB,KAAK,sBAAL,EANrB;AAOH;AAvEmB;;AAAA;AAAA,MAAX;;;;;;;;;;;;;;;;;;;;;;;;ACFb,IAAA,UAAA,GAAA,YAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAGA,IAAM,cAAc,GAAG;AACnB,EAAA,UAAU,EAAE,CACR;AAAE,IAAA,IAAI,EAAE;AAAR,GADQ,EAER;AAAE,IAAA,IAAI,EAAE,wBAAR;AAAkC,IAAA,QAAQ,EAAE,QAA5C;AAAsD,IAAA,UAAU,EAAE;AAAlE,GAFQ,CADO;AAKnB,EAAA,YAAY,EAAE;AALK,CAAvB;AAQa,OAAA,CAAA,IAAA,GAAO;AAAA;AAAA;AAAK,oBAAA;AAAA;;AAGZ,SAAA,UAAA,GAAa,cAAb;AACA,SAAA,UAAA,GAAa,GAAb,CAJY,CAMrB;;AACS,SAAA,eAAA,GAAkB;AAAE,MAAA,MAAM,EAAE,CAAV;AAAa,MAAA,MAAM,EAAE;AAArB,KAAlB;AACA,SAAA,UAAA,GAAa,KAAb,CARY,CAQQ;AAE7B;;AACS,SAAA,aAAA,GAAgB,cAAhB;AAEA,SAAA,OAAA,GAAU,UAAA,CAAA,QAAA,CAAS,UAAT,EAAV;AACA,SAAA,cAAA,GAAiB,UAAA,CAAA,QAAA,CAAS,UAAT,EAAjB,CAdY,CAgBrB;;AACS,SAAA,QAAA,GAAY,YAAA;AACjB,UAAM,SAAS,GAAoB;AAC/B,QAAA,OAAO,EAAE,UAAA,CAAA,QAAA,CAAS,kBAAT,EADsB;AAE/B,QAAA,MAAM,EAAE,UAAA,CAAA,QAAA,CAAS,iBAAT,EAFuB;AAG/B,QAAA,UAAU,EAAE,KAHmB;AAI/B,QAAA,IAAI,EAAE,KAJyB;AAK/B,QAAA,UAAU,EAAE,KALmB;AAM/B,QAAA,QAAQ,EAAE;AANqB,OAAnC;AASA,UAAI,CAAC,SAAS,CAAC,MAAf,EAAuB,OAAO,SAAP;AAEvB,UAAI,EAAJ;;AAEA,UAAI;AACA,QAAA,EAAE,GAAG,IAAI,iBAAJ,CAAsB,cAAtB,CAAL;AAEA,QAAA,SAAS,CAAC,UAAV,GAAuB,IAAvB;AAEA,YAAI,EAAJ;;AAEA,YAAI;AACA,UAAA,EAAE,GAAG,EAAE,CAAC,iBAAH,CAAqB,aAArB,EAAoC;AAAE,YAAA,OAAO,EAAE;AAAX,WAApC,CAAL;AACA,UAAA,SAAS,CAAC,IAAV,GAAiB,IAAjB;AACA,UAAA,SAAS,CAAC,QAAV,GAAqB,CAAC,CAAC,EAAE,CAAC,OAA1B,CAHA,CAKA;;AACA,cAAI;AACA,YAAA,EAAE,CAAC,UAAH,GAAgB,MAAhB;AACA,YAAA,SAAS,CAAC,UAAV,GAAuB,CAAC,UAAA,CAAA,QAAA,CAAS,KAAjC;AACH,WAHD,CAGE,OAAO,CAAP,EAAU,CAAE;AACjB,SAVD,CAUE,OAAO,CAAP,EAAU,CACX,CAXD,SAWU;AACN,cAAI,EAAJ,EAAQ;AACJ,YAAA,EAAE,CAAC,KAAH;AACH;AACJ;AACJ,OAvBD,CAuBE,OAAO,CAAP,EAAU,CACX,CAxBD,SAwBU;AACN,YAAI,EAAJ,EAAQ;AACJ,UAAA,EAAE,CAAC,KAAH;AACH;AACJ;;AAED,aAAO,SAAP;AACH,KA7CmB,EAAX;;AAqDT,SAAA,IAAA,GAAO,UAAU,CAAC,IAAlB;AACA,SAAA,MAAA,GAAS,UAAU,CAAC,MAApB,CAvEqB,CAyErB;;AAEQ,SAAA,UAAA,GAAqB,CAArB;AA+DX;;AA1ImB;AAAA;AAAA,2BACZ,CAAW,CADC,CAgEhB;;AAhEgB;AAAA;AAAA,+BAiEL,EAjEK,EAiEK;AACjB;AACA,aAAO,CAAC,EAAD,IAAO,uCAAuC,IAAvC,CAA4C,EAA5C,CAAd;AACH;AApEe;AAAA;AAAA,0BA6EV,IA7EU,EA6EA;AACZ,UAAM,MAAM,GAAG,EAAf;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,IAAlB;AACA,UAAM,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,GAAG,OAAA,CAAA,IAAA,CAAK,UAAtB,CAAd;AAEA,UAAI,KAAK,GAAG,CAAZ;AACA,UAAI,KAAK,GAAG,CAAZ;;AAEA,aAAO,KAAK,GAAG,IAAf,EAAqB;AACjB,YAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,KAAK,GAAG,OAAA,CAAA,IAAA,CAAK,UAA5B,CAAZ;AACA,YAAM,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,KAAX,EAAkB,GAAlB,CAAV;AAEA,YAAM,KAAK,GAAG;AACV,UAAA,UAAU,EAAE,KAAK,UADP;AAEV,UAAA,CAAC,EAAE,KAFO;AAGV,UAAA,IAAI,EAAE,CAHI;AAIV,UAAA,KAAK,EAAL;AAJU,SAAd;AAOA,QAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AAEA,QAAA,KAAK,GAAG,GAAR;AACA,QAAA,KAAK;AACR;;AAED,WAAK,UAAL;AAEA,aAAO,MAAP;AACH;AAzGe;AAAA;AAAA,sCA2GE,IA3GF,EA2Gc,EA3Gd,EA2GmD;AAC/D,UAAM,EAAE,GAAG,IAAI,UAAJ,EAAX;;AAEA,MAAA,EAAE,CAAC,MAAH,GAAY,UAAU,GAAV,EAAa;AACrB,YAAI,GAAG,CAAC,MAAR,EAAgB;AACZ,UAAA,EAAE,CAAC,GAAG,CAAC,MAAJ,CAAW,MAAZ,CAAF;AACH;AACJ,OAJD;;AAMA,MAAA,EAAE,CAAC,iBAAH,CAAqB,IAArB;AAEA,aAAO,EAAP;AACH;AAvHe;AAAA;AAAA,8CAyHU,MAzHV,EAyHwB;AACpC,UAAM,SAAS,GAAG,IAAI,UAAJ,CAAe,MAAM,CAAC,MAAtB,CAAlB;;AAEA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACpC,QAAA,SAAS,CAAC,CAAD,CAAT,GAAe,MAAM,CAAC,UAAP,CAAkB,CAAlB,IAAuB,IAAtC;AACH;;AAED,aAAO,SAAS,CAAC,MAAjB;AACH;AAjIe;AAAA;AAAA,kCAmIL;AACP,aAAO,IAAI,CAAC,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,MAA3B,CAAkC,CAAlC,CAAP;AACH;AArIe;AAAA;AAAA,+BAuIR;AACJ,aAAO,IAAP;AACH;AAzIe;;AAAA;AAAA,MAAP;;ACZbhVA,IAAM,UAAU,GAAG,UAAnB;AAEA;;;;;;;;AAOA,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAChB,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACH,CALD,EAAY,QAAQ,GAAR,OAAA,CAAA,QAAA,KAAA,OAAA,CAAA,QAAA,GAAQ,EAAR,CAAZ;;IAOM;;;AAAN,oBAAA;AAAA;;AACY,SAAA,SAAA,GAAY,QAAQ,CAAC,QAArB;AA8CX;;;;0BAxCqB;AACd,UAAI,KAAK,SAAL,IAAkB,QAAQ,CAAC,GAA/B,EAAoC;AAAA,0CADjC,IACiC;AADjC,UAAA,IACiC;AAAA;;AAChC,aAAK,MAAL,cAAY,QAAQ,CAAC,GAArB,SAA6B,IAA7B;AACH;AACJ;;;2BAEkB;AACf,UAAI,KAAK,SAAL,IAAkB,QAAQ,CAAC,QAA/B,EAAyC;AAAA,2CADrC,IACqC;AADrC,UAAA,IACqC;AAAA;;AACrC,aAAK,MAAL,cAAY,QAAQ,CAAC,QAArB,SAAkC,IAAlC;AACH;AACJ;;;4BAEmB;AAChB,UAAI,KAAK,SAAL,IAAkB,QAAQ,CAAC,MAA/B,EAAuC;AAAA,2CADlC,IACkC;AADlC,UAAA,IACkC;AAAA;;AACnC,aAAK,MAAL,cAAY,QAAQ,CAAC,MAArB,SAAgC,IAAhC;AACH;AACJ;;;mCAEc,IAA6C;AACxD,WAAK,MAAL,GAAc,EAAd;AACH;;;2BAEc,UAAkC;AAAA,yCAAX,IAAW;AAAX,QAAA,IAAW;AAAA;;AAC7C,UAAM,IAAI,IAAI,UAAJ,SAAmB,IAAnB,CAAV;;AAEA,WAAK,IAAI,CAAT,IAAc,IAAd,EAAoB;AAChB,YAAI,IAAI,CAAC,CAAD,CAAJ,YAAmB,KAAvB,EAA8B;AAC1B,UAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,MAAM,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAd,GAAqB,IAArB,GAA4B,IAAI,CAAC,CAAD,CAAJ,CAAQ,OAA9C;AAEH;AACJ;;AAED,UAAI,QAAQ,IAAI,QAAQ,CAAC,GAAzB,EAA8B;AAAA;;AAC1B,oBAAA,OAAO,EAAC,GAAR,oCAAe,IAAf;AACH,OAFD,MAEO,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAzB,EAAmC;AAAA;;AACtC,qBAAA,OAAO,EAAC,IAAR,mBAAa,SAAb,4BAA2B,IAA3B;AACH,OAFM,MAEA,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAzB,EAAiC;AAAA;;AACpC,qBAAA,OAAO,EAAC,KAAR,mBAAc,OAAd,4BAA0B,IAA1B;AACH;AACJ;;;wBA3CW;AAAe,aAAO,KAAK,SAAZ;AAAwB;sBAEtC,UAAkB;AAAI,WAAK,SAAL,GAAiB,QAAjB;AAA4B;;;;;;AA4CnE,OAAA,CAAA,OAAA,GAAe,IAAI,MAAJ,EAAf;;;;;;;ACjEA,IAAY,mBAAZ;;AAAA,CAAA,UAAY,mBAAZ,EAA+B;AAC7B,EAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACD,CAPD,EAAY,mBAAmB,GAAnB,OAAA,CAAA,mBAAA,KAAA,OAAA,CAAA,mBAAA,GAAmB,EAAnB,CAAZ;;AASA,IAAY,cAAZ;;AAAA,CAAA,UAAY,cAAZ,EAA0B;AACxB,EAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAHD,EAAY,cAAc,GAAd,OAAA,CAAA,cAAA,KAAA,OAAA,CAAA,cAAA,GAAc,EAAd,CAAZ;;AAKA,IAAY,aAAZ;;AAAA,CAAA,UAAY,aAAZ,EAAyB;AACvB,EAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,aAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAPD,EAAY,aAAa,GAAb,OAAA,CAAA,aAAA,KAAA,OAAA,CAAA,aAAA,GAAa,EAAb,CAAZ;;AASA,IAAY,aAAZ;;AAAA,CAAA,UAAY,aAAZ,EAAyB;AACvB,EAAA,aAAA,CAAA,qBAAA,CAAA,GAAA,sBAAA;AACA,EAAA,aAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,aAAA,CAAA,WAAA,CAAA,GAAA,YAAA;AACA,EAAA,aAAA,CAAA,YAAA,CAAA,GAAA,aAAA;AACA,EAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,aAAA,CAAA,iBAAA,CAAA,GAAA,kBAAA;AACA,EAAA,aAAA,CAAA,gBAAA,CAAA,GAAA,iBAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,GAAA,cAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,GAAA,cAAA;AACA,EAAA,aAAA,CAAA,cAAA,CAAA,GAAA,eAAA;AACA,EAAA,aAAA,CAAA,eAAA,CAAA,GAAA,gBAAA;AACA,EAAA,aAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACD,CAbD,EAAY,aAAa,GAAb,OAAA,CAAA,aAAA,KAAA,OAAA,CAAA,aAAA,GAAa,EAAb,CAAZ;;AAeA,IAAY,iBAAZ;;AAAA,CAAA,UAAY,iBAAZ,EAA6B;AAC3B,EAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,iBAAA,CAAA,YAAA,CAAA,GAAA,aAAA;AACA,EAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAJD,EAAY,iBAAiB,GAAjB,OAAA,CAAA,iBAAA,KAAA,OAAA,CAAA,iBAAA,GAAiB,EAAjB,CAAZ;;AAMA,IAAY,eAAZ;;AAAA,CAAA,UAAY,eAAZ,EAA2B;AACzB,EAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CALD,EAAY,eAAe,GAAf,OAAA,CAAA,eAAA,KAAA,OAAA,CAAA,eAAA,GAAe,EAAf,CAAZ;;AAOA,IAAY,iBAAZ;;AAAA,CAAA,UAAY,iBAAZ,EAA6B;AAC3B,EAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,UAAA;AACA,EAAA,iBAAA,CAAA,YAAA,CAAA,GAAA,aAAA;AACA,EAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAA,CAV2B,CAUT;AAEnB,CAZD,EAAY,iBAAiB,GAAjB,OAAA,CAAA,iBAAA,KAAA,OAAA,CAAA,iBAAA,GAAiB,EAAjB,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;;;;;IAIa;;;;;AAQX,kBACE,MADF,EAEE,IAFF,EAGE,IAHF,EAIE,IAJF,EAKE,GALF,EAM8C;AAAA;;AAAA,QAA3B,YAA2B,uEAAJ,IAAI;;AAAA;;AAE5C;AAFiB,UAAA,YAAA,GAAA,YAAA;AAbX,UAAA,aAAA,GAAyB,IAAzB;AAEA,UAAA,cAAA,GAAgC,EAAhC;AAeN,QAAM,UAAU,GAAG,MAAM,GAAG,QAAH,GAAc,OAAvC;AAEA,UAAK,QAAL,GAAgB,UAAU,GAAG,IAAb,GAAoB,GAApB,GAA0B,IAA1B,GAAiC,IAAjC,GAAwC,aAAxC,GAAwD,GAAxE;AAN4C;AAO7C;;;;0BAEK,IAAY,OAAa;AAAA;;AAC7B,WAAK,GAAL,GAAW,EAAX;AAEA,UAAM,KAAK,aAAM,KAAK,QAAX,iBAA0B,EAA1B,oBAAsC,KAAtC,CAAX;;AAEA,UAAI,CAAC,CAAC,KAAK,OAAP,IAAkB,CAAC,KAAK,aAA5B,EAA2C;AACzC;AACD;;AAED,WAAK,OAAL,GAAe,IAAI,SAAJ,CAAc,KAAd,CAAf;AACA,WAAK,aAAL,GAAqB,KAArB;;AAEA,WAAK,OAAL,CAAa,SAAb,GAAyB,UAAC,KAAD,EAAU;AACjC,YAAI,IAAJ;;AAEA,YAAI;AACF,UAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,IAAjB,CAAP;AACA,UAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,0BAAX,EAAuC,IAAvC;AACD,SAHD,CAGE,OAAO,CAAP,EAAU;AACV,UAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,wBAAX,EAAqC,KAAK,CAAC,IAA3C;AACA;AACD;;AAED,QAAA,MAAI,CAAC,IAAL,CAAU,OAAA,CAAA,eAAA,CAAgB,OAA1B,EAAmC,IAAnC;AACD,OAZD;;AAcA,WAAK,OAAL,CAAa,OAAb,GAAuB,UAAC,KAAD,EAAU;AAC/B,YAAI,MAAI,CAAC,aAAT,EAAwB;AACtB;AACD;;AAED,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,gBAAX,EAA6B,KAA7B;;AAEA,QAAA,MAAI,CAAC,QAAL;;AACA,QAAA,MAAI,CAAC,aAAL,GAAqB,IAArB;;AAEA,QAAA,MAAI,CAAC,IAAL,CAAU,OAAA,CAAA,eAAA,CAAgB,YAA1B;AACD,OAXD,CA1B6B,CAuC7B;AACA;;;AACA,WAAK,OAAL,CAAa,MAAb,GAAsB,YAAK;AACzB,YAAI,MAAI,CAAC,aAAT,EAAwB;AACtB;AACD;;AAED,QAAA,MAAI,CAAC,mBAAL;;AAEA,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,aAAX;;AAEA,QAAA,MAAI,CAAC,kBAAL;AACD,OAVD;AAWD;;;yCAEyB;AAAA;;AACxB,WAAK,YAAL,GAAoB,UAAU,CAAC,YAAK;AAClC,QAAA,MAAI,CAAC,cAAL;AACD,OAF6B,EAE3B,KAAK,YAFsB,CAA9B;AAGD;;;qCAEqB;AACpB,UAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACnB,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP;AACA;AACD;;AAED,UAAM,OAAO,GAAG,IAAI,CAAC,SAAL,CAAe;AAAE,QAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB;AAA1B,OAAf,CAAhB;;AAEA,WAAK,OAAL,CAAc,IAAd,CAAmB,OAAnB;;AAEA,WAAK,kBAAL;AACD;AAED;;;;8BACe;AACb,aAAO,CAAC,CAAC,KAAK,OAAP,IAAkB,KAAK,OAAL,CAAa,UAAb,KAA4B,CAArD;AACD;AAED;;;;0CAC2B;AACzB;AACA;AACA,UAAM,WAAW,sBAAO,KAAK,cAAZ,CAAjB;;AACA,WAAK,cAAL,GAAsB,EAAtB;AAJyB;AAAA;AAAA;;AAAA;AAMzB,6BAAsB,WAAtB,8HAAmC;AAAA,cAAxB,OAAwB;AACjC,eAAK,IAAL,CAAU,OAAV;AACD;AARwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS1B;AAED;;;;yBACK,MAAS;AACZ,UAAI,KAAK,aAAT,EAAwB;AACtB;AACD,OAHW,CAKZ;AACA;;;AACA,UAAI,CAAC,KAAK,GAAV,EAAe;AACb,aAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB;;AACA;AACD;;AAED,UAAI,CAAC,IAAI,CAAC,IAAV,EAAgB;AACd,aAAK,IAAL,CAAU,OAAA,CAAA,eAAA,CAAgB,KAA1B,EAAiC,iBAAjC;AACA;AACD;;AAED,UAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACnB;AACD;;AAED,UAAM,OAAO,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAhB;;AAEA,WAAK,OAAL,CAAc,IAAd,CAAmB,OAAnB;AACD;;;4BAEI;AACH,UAAI,KAAK,aAAT,EAAwB;AACtB;AACD;;AAED,WAAK,QAAL;;AAEA,WAAK,aAAL,GAAqB,IAArB;AACD;;;+BAEe;AACd,UAAI,CAAC,CAAC,KAAK,OAAX,EAAoB;AAClB,aAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,OAAL,CAAa,SAAb,GAAyB,KAAK,OAAL,CAAa,OAAb,GAAuB,IAAtE;;AACA,aAAK,OAAL,CAAa,KAAb;;AACA,aAAK,OAAL,GAAe,SAAf;AACD;;AAED,MAAA,YAAY,CAAC,KAAK,YAAN,CAAZ;AACD;;;;EA9JyB,eAAA,CAAA;;AAA5B,OAAA,CAAA,MAAA,GAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAGA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAGA;;;;;IAGa;;;AACT,sBAAqB,UAArB,EAA+C;AAAA;;AAA1B,SAAA,UAAA,GAAA,UAAA;AAA8B;AAEnD;;;;;oCACgB,SAAY;AACxB,UAAM,cAAc,GAAG,KAAK,oBAAL,EAAvB,CADwB,CAGxB;;;AACA,WAAK,UAAL,CAAgB,cAAhB,GAAiC,cAAjC;;AAEA,UAAI,KAAK,UAAL,CAAgB,IAAhB,KAAyB,OAAA,CAAA,cAAA,CAAe,KAAxC,IAAiD,OAAO,CAAC,OAA7D,EAAsE;AAClE,aAAK,sBAAL,CAA4B,OAAO,CAAC,OAApC,EAA6C,cAA7C;AACH,OARuB,CAUxB;;;AACA,UAAI,OAAO,CAAC,UAAZ,EAAwB;AACpB,YAAI,KAAK,UAAL,CAAgB,IAAhB,KAAyB,OAAA,CAAA,cAAA,CAAe,IAA5C,EAAkD;AAC9C,cAAM,cAAc,GAAmB,KAAK,UAA5C;AAEA,cAAM,MAAM,GAAuB;AAAE,YAAA,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC;AAArB,WAAnC;AAEA,cAAM,WAAW,GAAG,cAAc,CAAC,iBAAf,CAAiC,cAAc,CAAC,KAAhD,EAAuD,MAAvD,CAApB;AACA,UAAA,cAAc,CAAC,UAAf,CAA0B,WAA1B;AACH;;AAED,aAAK,UAAL;AACH,OAXD,MAWO;AACH,aAAK,SAAL,CAAe,OAAf,EAAwB,OAAO,CAAC,GAAhC;AACH;AACJ;AAED;;;;2CAC4B;AACxB,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,6BAAX;AAEA,UAAM,cAAc,GAAG,IAAI,iBAAJ,CAAsB,KAAK,UAAL,CAAgB,QAAhB,CAAyB,OAAzB,CAAiC,MAAvD,CAAvB;;AAEA,WAAK,eAAL,CAAqB,cAArB;;AAEA,aAAO,cAAP;AACH;AAED;;;;oCACwB,gBAAiC;AAAA;;AACrD,UAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,IAA/B;AACA,UAAM,YAAY,GAAG,KAAK,UAAL,CAAgB,YAArC;AACA,UAAM,cAAc,GAAG,KAAK,UAAL,CAAgB,IAAvC;AACA,UAAM,QAAQ,GAAG,KAAK,UAAL,CAAgB,QAAjC,CAJqD,CAMrD;;AACA,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,+BAAX;;AAEA,MAAA,cAAc,CAAC,cAAf,GAAgC,UAAC,GAAD,EAAQ;AACpC,YAAI,CAAC,GAAG,CAAC,SAAL,IAAkB,CAAC,GAAG,CAAC,SAAJ,CAAc,SAArC,EAAgD;AAEhD,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,uCAA0C,MAA1C,QAAqD,GAAG,CAAC,SAAzD;AAEA,QAAA,QAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAqB;AACjB,UAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,SADP;AAEjB,UAAA,OAAO,EAAE;AACL,YAAA,SAAS,EAAE,GAAG,CAAC,SADV;AAEL,YAAA,IAAI,EAAE,cAFD;AAGL,YAAA,YAAY,EAAE;AAHT,WAFQ;AAOjB,UAAA,GAAG,EAAE;AAPY,SAArB;AASH,OAdD;;AAgBA,MAAA,cAAc,CAAC,0BAAf,GAA4C,YAAK;AAC7C,gBAAQ,cAAc,CAAC,kBAAvB;AACI,eAAK,QAAL;AACI,YAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,0DAA0D,MAArE;;AACA,YAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CACI,OAAA,CAAA,mBAAA,CAAoB,KADxB,EAEI,IAAI,KAAJ,CAAU,kCAAkC,MAAlC,GAA2C,UAArD,CAFJ;;AAIA,YAAA,KAAI,CAAC,UAAL,CAAgB,KAAhB;;AACA;;AACJ,eAAK,QAAL;AACI,YAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,0DAA0D,MAArE;;AACA,YAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,OAAA,CAAA,mBAAA,CAAoB,KAAzC,EAAgD,IAAI,KAAJ,CAAU,mBAAmB,MAAnB,GAA4B,UAAtC,CAAhD;;AACA,YAAA,KAAI,CAAC,UAAL,CAAgB,KAAhB;;AACA;;AACJ,eAAK,cAAL;AACI,YAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,gEAAgE,MAA3E;;AACA,YAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CACI,OAAA,CAAA,mBAAA,CAAoB,KADxB,EAEI,IAAI,KAAJ,CAAU,mBAAmB,MAAnB,GAA4B,gBAAtC,CAFJ;;AAIA,YAAA,KAAI,CAAC,UAAL,CAAgB,KAAhB;;AACA;;AACJ,eAAK,WAAL;AACI,YAAA,cAAc,CAAC,cAAf,GAAgC,MAAA,CAAA,IAAA,CAAK,IAArC;AACA;AAxBR;;AA2BA,QAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,OAAA,CAAA,mBAAA,CAAoB,eAAzC,EAA0D,cAAc,CAAC,kBAAzE;AACH,OA7BD,CAzBqD,CAwDrD;;;AACA,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,4BAAX,EAzDqD,CA0DrD;AACA;;AACA,MAAA,cAAc,CAAC,aAAf,GAA+B,UAAC,GAAD,EAAQ;AACnC,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,uBAAX;AAEA,YAAM,WAAW,GAAG,GAAG,CAAC,OAAxB;AACA,YAAM,UAAU,GAAmB,QAAQ,CAAC,aAAT,CAAuB,MAAvB,EAA+B,YAA/B,CAAnC;AAEA,QAAA,UAAU,CAAC,UAAX,CAAsB,WAAtB;AACH,OAPD,CA5DqD,CAqErD;;;AACA,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,6BAAX,EAtEqD,CAwErD;;AACA,MAAA,cAAc,CAAC,WAAf,GAA6B,UAAC,GAAD,EAAQ;AACjC,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,wBAAX,EAAqC,GAArC,EADiC,CAGjC;AACA;AAEA;;AACA,YAAM,MAAM,GAAG,GAAG,CAAC,MAAnB;AACA,YAAM,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,EAA+B,YAA/B,CAAnB;;AAEA,YAAI,UAAU,CAAC,IAAX,KAAoB,OAAA,CAAA,cAAA,CAAe,KAAvC,EAA8C;AAC1C,cAAM,eAAe,GAAoB,UAAzC;;AAEA,UAAA,KAAI,CAAC,2BAAL,CAAiC,MAAjC,EAAyC,eAAzC;AACH;AACJ,OAfD;AAgBH;;;8BAEM;AACH,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,mCAAmC,KAAK,UAAL,CAAgB,IAA9D;AAEA,UAAM,cAAc,GAAG,KAAK,UAAL,CAAgB,cAAvC;;AAEA,UAAI,CAAC,cAAL,EAAqB;AACjB;AACH;;AAED,WAAK,UAAL,CAAgB,cAAhB,GAAiC,IAAjC,CATG,CAWH;;AACA,MAAA,cAAc,CAAC,cAAf,GAAgC,cAAc,CAAC,0BAAf,GAA4C,cAAc,CAAC,aAAf,GAA+B,cAAc,CAAC,WAAf,GAA6B,YAAK,CAAG,CAAhJ;;AACA,UAAM,uBAAuB,GAAG,cAAc,CAAC,cAAf,KAAkC,QAAlE;AACA,UAAI,oBAAoB,GAAG,KAA3B;;AAEA,UAAI,KAAK,UAAL,CAAgB,IAAhB,KAAyB,OAAA,CAAA,cAAA,CAAe,IAA5C,EAAkD;AAC9C,YAAM,cAAc,GAAmB,KAAK,UAA5C;AACA,YAAM,WAAW,GAAG,cAAc,CAAC,WAAnC;;AAEA,YAAI,WAAJ,EAAiB;AACb,UAAA,oBAAoB,GAAG,CAAC,CAAC,WAAW,CAAC,UAAd,IAA4B,WAAW,CAAC,UAAZ,KAA2B,QAA9E;AACH;AACJ;;AAED,UAAI,uBAAuB,IAAI,oBAA/B,EAAqD;AACjD,QAAA,cAAc,CAAC,KAAf;AACH;AACJ;;;iCAEuB;;;;;;;;;AACd,gBAAA,iBAAiB,KAAK,UAAL,CAAgB;AACjC,gBAAA,WAAW,KAAK,UAAL,CAAgB;;;AAGf,uBAAM,cAAc,CAAC,WAAf,CAA2B,KAAK,UAAL,CAAgB,OAAhB,CAAwB,WAAnD,CAAN;;;AAAR,gBAAA;AAEN,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,gBAAX;;AAEA,oBAAI,KAAK,UAAL,CAAgB,OAAhB,CAAwB,YAAxB,IAAwC,OAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,YAA/B,KAAgD,UAA5F,EAAwG;AACpG,kBAAA,KAAK,CAAC,GAAN,GAAY,KAAK,UAAL,CAAgB,OAAhB,CAAwB,YAAxB,CAAqC,KAAK,CAAC,GAA3C,KAAmD,KAAK,CAAC,GAArE;AACH;;;;AAGG,uBAAM,cAAc,CAAC,mBAAf,CAAmC,KAAnC,CAAN;;;AAEA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,uBAAX,EAAoC,KAApC,gBAAkD,KAAK,UAAL,CAAgB,IAAlE;AAEI,gBAAA,UAAe;AACf,kBAAA,GAAG,EAAE,KADU;AAEf,kBAAA,IAAI,EAAE,KAAK,UAAL,CAAgB,IAFP;AAGf,kBAAA,YAAY,EAAE,KAAK,UAAL,CAAgB,YAHf;AAIf,kBAAA,QAAQ,EAAE,KAAK,UAAL,CAAgB,QAJX;AAKf,kBAAA,OAAO,EAAE,MAAA,CAAA,IAAA,CAAK;AALC;;AAQnB,oBAAI,KAAK,UAAL,CAAgB,IAAhB,KAAyB,OAAA,CAAA,cAAA,CAAe,IAA5C,EAAkD;AACxC,kBAAA,cADwC,GACP,KAAK,UADE;AAG9C,kBAAA,OAAO,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACA,OADA,CAAA,EACO;AACV,oBAAA,KAAK,EAAE,cAAc,CAAC,KADZ;AAEV,oBAAA,QAAQ,EAAE,cAAc,CAAC,QAFf;AAGV,oBAAA,aAAa,EAAE,cAAc,CAAC;AAHpB,mBADP,CAAP;AAMH;;AAED,gBAAA,QAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAqB;AACjB,kBAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,KADP;AAEjB,kBAAA,OAAO,EAAP,OAFiB;AAGjB,kBAAA,GAAG,EAAE,KAAK,UAAL,CAAgB;AAHJ,iBAArB;;;;;;;;AAMA;AACA,oBAAI,eAAO,wFAAX,EAAqG;AACjG,kBAAA,QAAQ,CAAC,SAAT,CAAmB,OAAA,CAAA,aAAA,CAAc,MAAjC;AACA,kBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,iCAAX;AACH;;;;;;;;;AAGL,gBAAA,QAAQ,CAAC,SAAT,CAAmB,OAAA,CAAA,aAAA,CAAc,MAAjC;AACA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,yBAAX;;;;;;;;;AAEP;;;kCAEwB;;;;;;;;;AACf,gBAAA,iBAAiB,KAAK,UAAL,CAAgB;AACjC,gBAAA,WAAW,KAAK,UAAL,CAAgB;;;AAGd,uBAAM,cAAc,CAAC,YAAf,EAAN;;;AAAT,gBAAA;AACN,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,iBAAX;;AAEA,oBAAI,KAAK,UAAL,CAAgB,OAAhB,CAAwB,YAAxB,IAAwC,OAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,YAA/B,KAAgD,UAA5F,EAAwG;AACpG,kBAAA,MAAM,CAAC,GAAP,GAAa,KAAK,UAAL,CAAgB,OAAhB,CAAwB,YAAxB,CAAqC,MAAM,CAAC,GAA5C,KAAoD,MAAM,CAAC,GAAxE;AACH;;;;AAGG,uBAAM,cAAc,CAAC,mBAAf,CAAmC,MAAnC,CAAN;;;AAEA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,0BAAoC,MAApC,gBAAmD,KAAK,UAAL,CAAgB,IAAnE;AAEA,gBAAA,QAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAqB;AACjB,kBAAA,IAAI,EAAE,OAAA,CAAA,iBAAA,CAAkB,MADP;AAEjB,kBAAA,OAAO,EAAE;AACL,oBAAA,GAAG,EAAE,MADA;AAEL,oBAAA,IAAI,EAAE,KAAK,UAAL,CAAgB,IAFjB;AAGL,oBAAA,YAAY,EAAE,KAAK,UAAL,CAAgB,YAHzB;AAIL,oBAAA,OAAO,EAAE,MAAA,CAAA,IAAA,CAAK;AAJT,mBAFQ;AAQjB,kBAAA,GAAG,EAAE,KAAK,UAAL,CAAgB;AARJ,iBAArB;;;;;;;AAWA,gBAAA,QAAQ,CAAC,SAAT,CAAmB,OAAA,CAAA,aAAA,CAAc,MAAjC;AACA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,iCAAX;;;;;;;;;AAGJ,gBAAA,QAAQ,CAAC,SAAT,CAAmB,OAAA,CAAA,aAAA,CAAc,MAAjC;AACA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,2BAAX;;;;;;;;;AAEP;AAED;;;;8BACgB,MAAc,KAAQ;;;;;;;;;AAClC,gBAAA,GAAG,GAAG,IAAI,qBAAJ,CAA0B,GAA1B,CAAN;AACM,gBAAA,iBAAiB,KAAK,UAAL,CAAgB;AACjC,gBAAA,WAAW,KAAK,UAAL,CAAgB;AAEjC,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,4BAAX,EAAyC,GAAzC;AAEM,gBAAA,OAAO;;;AAGT,uBAAM,cAAc,CAAC,oBAAf,CAAoC,GAApC,CAAN;;;AACA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,iCAAoC,IAApC,kBAAgD,KAAK,UAAL,CAAgB,IAAhE;;sBACI,IAAI,KAAK;;;;;;AACT,uBAAM,IAAI,CAAC,WAAL,EAAN;;;;;;;;;AAGJ,gBAAA,QAAQ,CAAC,SAAT,CAAmB,OAAA,CAAA,aAAA,CAAc,MAAjC;AACA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,kCAAX;;;;;;;;;AAEP;AAED;;;;oCACsB,KAAQ;;;;;;;;;AAC1B,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,qBAA+B,GAA/B;AAEM,gBAAA,YAAY,GAAG,CAAC;AAChB,gBAAA,gBAAgB,GAAG,CAAC;AACpB,gBAAA,SAAS,GAAG,CAAC;AACb,gBAAA,iBAAiB,KAAK,UAAL,CAAgB;AACjC,gBAAA,WAAW,KAAK,UAAL,CAAgB;;;AAG7B,uBAAM,cAAc,CAAC,eAAf,CACF,IAAI,eAAJ,CAAoB;AAChB,kBAAA,MAAM,EAAE,MADQ;AAEhB,kBAAA,aAAa,EAAE,aAFC;AAGhB,kBAAA,SAAS,EAAE;AAHK,iBAApB,CADE,CAAN;;;AAOA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,mCAAsC,KAAK,UAAL,CAAgB,IAAtD;;;;;;;AAEA,gBAAA,QAAQ,CAAC,SAAT,CAAmB,OAAA,CAAA,aAAA,CAAc,MAAjC;AACA,gBAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,6BAAX;;;;;;;;;AAEP;;;2CAE8B,QAAqB,gBAAiC;AACjF,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,kCAAqC,MAAM,CAAC,EAA5C,0BADiF,CAGjF;;AACA,UAAI,CAAC,cAAc,CAAC,SAApB,EAA+B,2EAJkD,CAKjF;AACA;AACA;;AAEA,MAAA,cAAc,CAAC,SAAf,CAAyB,MAAzB,EATiF,CAUjF;AACA;AACA;AACH;;;gDAEmC,QAAqB,iBAAgC;AACrF,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,sBAAyB,MAAM,CAAC,EAAhC,kCAA0D,eAAe,CAAC,YAA1E;AAEA,MAAA,eAAe,CAAC,SAAhB,CAA0B,MAA1B;AACH;;;;;;AAlUL,OAAA,CAAA,UAAA,GAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;IAKsB;;;;;AAcpB,0BACW,IADX,EAES,QAFT,EAGW,OAHX,EAGuB;AAAA;;AAAA;;AAErB;AAJS,UAAA,IAAA,GAAA,IAAA;AACF,UAAA,QAAA,GAAA,QAAA;AACE,UAAA,OAAA,GAAA,OAAA;AAhBD,UAAA,KAAA,GAAQ,KAAR;AAoBR,UAAK,QAAL,GAAgB,OAAO,CAAC,QAAxB;AAJqB;AAKtB;;;;wBAZO;AACN,aAAO,KAAK,KAAZ;AACD;;;;EAZ0C,eAAA,CAAA;;AAA7C,OAAA,CAAA,cAAA,GAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;AAIA;;;;;IAGa;;;;;AAcX,2BAAY,MAAZ,EAA4B,QAA5B,EAA4C,OAA5C,EAAwD;AAAA;;AAAA;;AACtD,yFAAM,MAAN,EAAc,QAAd,EAAwB,OAAxB;AAEA,UAAK,YAAL,GAAoB,MAAK,OAAL,CAAa,OAAjC;AACA,UAAK,YAAL,GACE,MAAK,OAAL,CAAa,YAAb,IACA,eAAe,CAAC,SAAhB,GAA4B,MAAA,CAAA,IAAA,CAAK,WAAL,EAF9B;AAIA,UAAK,WAAL,GAAmB,IAAI,YAAA,CAAA,UAAJ,+BAAnB;;AAEA,QAAI,MAAK,YAAT,EAAuB;AACrB,YAAK,WAAL,CAAiB,eAAjB,CAAiC;AAC/B,QAAA,OAAO,EAAE,MAAK,YADiB;AAE/B,QAAA,UAAU,EAAE;AAFmB,OAAjC;AAID;;AAfqD;AAgBvD;;;;8BAES,cAAY;AACpB,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,kBAAX,EAA+B,YAA/B;AAEA,WAAK,aAAL,GAAqB,YAArB;;AACA,gFAAW,OAAA,CAAA,mBAAA,CAAoB,MAA/B,EAAuC,YAAvC,EAJoB,CAIkC;;AACvD;;;kCAEa,SAAsB;AAClC,UAAM,IAAI,GAAG,OAAO,CAAC,IAArB;AACA,UAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;;AAEA,cAAQ,OAAO,CAAC,IAAhB;AACE,aAAK,OAAA,CAAA,iBAAA,CAAkB,MAAvB;AACE;AACA,eAAK,WAAL,CAAiB,SAAjB,CAA2B,IAA3B,EAAiC,OAAO,CAAC,GAAzC;;AACA,eAAK,KAAL,GAAa,IAAb;AACA;;AACF,aAAK,OAAA,CAAA,iBAAA,CAAkB,SAAvB;AACE,eAAK,WAAL,CAAiB,eAAjB,CAAiC,OAAO,CAAC,SAAzC;;AACA;;AACF;AACE,UAAA,QAAA,CAAA,OAAA,CAAO,IAAP,qCAAyC,IAAzC,wBAA2D,KAAK,IAAhE;AACA;AAXJ;AAaD;;;2BAEM,QAA+C;AAAA,UAA1B,OAA0B,uEAAF,EAAE;;AACpD,UAAI,KAAK,YAAT,EAAuB;AACrB,QAAA,QAAA,CAAA,OAAA,CAAO,IAAP,CACE,sFADF;AAGA;AACD;;AAED,WAAK,YAAL,GAAoB,MAApB;;AAEA,UAAI,OAAO,IAAI,OAAO,CAAC,YAAvB,EAAqC;AACnC,aAAK,OAAL,CAAa,YAAb,GAA4B,OAAO,CAAC,YAApC;AACD;;AAED,WAAK,WAAL,CAAiB,eAAjB,CAAgC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,KAAK,OAAL,CAAa,QAAnB,CAAA,EAA2B;AAAE,QAAA,OAAO,EAAE;AAAX,OAA3B,CAAhC,EAdoD,CAepD;;;AACA,UAAM,QAAQ,GAAG,KAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,YAAhC,CAAjB;;AAhBoD;AAAA;AAAA;;AAAA;AAkBpD,6BAAoB,QAApB,8HAA8B;AAAA,cAArB,OAAqB;AAC5B,eAAK,aAAL,CAAmB,OAAnB;AACD;AApBmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBpD,WAAK,KAAL,GAAa,IAAb;AACD;AAED;;;;AAIA;;;;4BACK;AACH,UAAI,KAAK,WAAT,EAAsB;AACpB,aAAK,WAAL,CAAiB,OAAjB;;AACA,aAAK,WAAL,GAAmB,IAAnB;AACD;;AAED,WAAK,YAAL,GAAoB,IAApB;AACA,WAAK,aAAL,GAAqB,IAArB;;AAEA,UAAI,KAAK,QAAT,EAAmB;AACjB,aAAK,QAAL,CAAc,iBAAd,CAAgC,IAAhC;;AAEA,aAAK,QAAL,GAAgB,IAAhB;AACD;;AAED,UAAI,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,OAAjC,EAA0C;AACxC,aAAK,OAAL,CAAa,OAAb,GAAuB,IAAvB;AACD;;AAED,UAAI,CAAC,KAAK,IAAV,EAAgB;AACd;AACD;;AAED,WAAK,KAAL,GAAa,KAAb;;AAEA,gFAAW,OAAA,CAAA,mBAAA,CAAoB,KAA/B;AACD;;;wBA3GO;AACN,aAAO,OAAA,CAAA,cAAA,CAAe,KAAtB;AACD;;;wBAEc;AAAkB,aAAO,KAAK,YAAZ;AAA2B;;;wBAC5C;AAAkB,aAAO,KAAK,aAAZ;AAA4B;;;;EAZ3B,gBAAA,CAAA;;AAArC,OAAA,CAAA,eAAA,GAAA,eAAA;AAC0B,eAAA,CAAA,SAAA,GAAY,KAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb1B,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;IAEa;;;;;AAMX,2BAAA;AAAA;;AAAA;;AACE;AANO,UAAA,UAAA,GAAyB,IAAI,UAAJ,EAAzB;AAED,UAAA,MAAA,GAAiB,EAAjB;AACA,UAAA,WAAA,GAAuB,KAAvB;;AAKN,UAAK,UAAL,CAAgB,MAAhB,GAAyB,UAAC,GAAD,EAAQ;AAC/B,YAAK,WAAL,GAAmB,KAAnB;;AAEA,UAAI,GAAG,CAAC,MAAR,EAAgB;AACd,cAAK,IAAL,CAAU,MAAV,EAAkB,GAAG,CAAC,MAAJ,CAAW,MAA7B;AACD;;AAED,YAAK,UAAL;AACD,KARD;;AAUA,UAAK,UAAL,CAAgB,OAAhB,GAA0B,UAAC,GAAD,EAAQ;AAChC,MAAA,QAAA,CAAA,OAAA,CAAO,KAAP,yBAAqC,GAArC;AACA,YAAK,WAAL,GAAmB,KAAnB;;AACA,YAAK,OAAL;;AACA,YAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB;AACD,KALD;;AAbF;AAmBC;;;;0BAcK,MAAU;AACd,WAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AAEA,UAAI,KAAK,UAAT,EAAqB;AAErB,WAAK,UAAL;AACD;;;8BAEM;AACL,WAAK,UAAL,CAAgB,KAAhB;AACA,WAAK,MAAL,GAAc,EAAd;AACD;;;iCAEiB;AAChB,UAAI,KAAK,IAAL,KAAc,CAAlB,EAAqB;AACrB,UAAI,KAAK,UAAT,EAAqB;AAErB,WAAK,WAAL,GAAmB,IAAnB;AAEA,WAAK,UAAL,CAAgB,iBAAhB,CAAkC,KAAK,KAAL,CAAW,KAAX,EAAlC;AACD;;;wBAhCQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEO;AACN,aAAO,KAAK,KAAL,CAAW,MAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAK,WAAZ;AACD;;;;EArCgC,eAAA,CAAA;;AAAnC,OAAA,CAAA,aAAA,GAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAGA;;;;;IAGa;;;;;AAqCT,0BAAY,MAAZ,EAA4B,QAA5B,EAA4C,OAA5C,EAAwD;AAAA;;AAAA;;AACpD,wFAAM,MAAN,EAAc,QAAd,EAAwB,OAAxB;AA9BJ,UAAA,SAAA,GAAmC,IAAI,CAAC,SAAxC;AACA,UAAA,KAAA,GAA+B,IAAI,CAAC,KAApC;AAMQ,UAAA,OAAA,GAAiB,EAAjB;AACA,UAAA,WAAA,GAAc,CAAd;AACA,UAAA,UAAA,GAAa,KAAb;AACA,UAAA,YAAA,GAMJ,EANI;AASA,UAAA,cAAA,GAAiB,IAAI,eAAA,CAAA,aAAJ,EAAjB;AAaJ,UAAK,YAAL,GAAoB,MAAK,OAAL,CAAa,YAAb,IAA6B,cAAc,CAAC,SAAf,GAA2B,MAAA,CAAA,IAAA,CAAK,WAAL,EAA5E;AAEA,UAAK,KAAL,GAAa,MAAK,OAAL,CAAa,KAAb,IAAsB,MAAK,YAAxC;AACA,UAAK,aAAL,GAAqB,MAAK,OAAL,CAAa,aAAb,IAA8B,OAAA,CAAA,iBAAA,CAAkB,IAArE;AACA,UAAK,QAAL,GAAgB,CAAC,CAAC,MAAK,OAAL,CAAa,QAA/B;;AAEA,UAAK,cAAL,CAAoB,EAApB,CAAuB,MAAvB,EAA+B,UAAC,EAAD,EAAoB;AAC/C,YAAK,aAAL,CAAmB,EAAnB;AACH,KAFD;;AAIA,UAAK,cAAL,CAAoB,EAApB,CAAuB,OAAvB,EAAgC,YAAK;AACjC,MAAA,QAAA,CAAA,OAAA,CAAO,KAAP,cAAmB,MAAK,YAAxB;;AACA,YAAK,KAAL;AACH,KAHD;;AAKA,UAAK,WAAL,GAAmB,IAAI,YAAA,CAAA,UAAJ,+BAAnB;;AAEA,UAAK,WAAL,CAAiB,eAAjB,CACI,MAAK,OAAL,CAAa,QAAb,IAAyB;AACrB,MAAA,UAAU,EAAE;AADS,KAD7B;;AApBoD;AAyBvD;;;;;AAED;+BACW,IAAkB;AACzB,WAAK,GAAL,GAAW,EAAX;;AACA,WAAK,qBAAL;AACH;;;4CAE4B;AAAA;;AACzB,UAAI,CAAC,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,UAAf,IAA6B,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,QAA/C,EAAyD;AACrD,aAAK,WAAL,CAAiB,UAAjB,GAA8B,aAA9B;AACH;;AAED,WAAK,WAAL,CAAiB,MAAjB,GAA0B,YAAK;AAC3B,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,cAAiB,MAAI,CAAC,YAAtB;AACA,QAAA,MAAI,CAAC,KAAL,GAAa,IAAb;;AACA,QAAA,MAAI,CAAC,IAAL,CAAU,OAAA,CAAA,mBAAA,CAAoB,IAA9B;AACH,OAJD;;AAMA,WAAK,WAAL,CAAiB,SAAjB,GAA6B,UAAC,CAAD,EAAM;AAC/B,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,cAAiB,MAAI,CAAC,YAAtB,qBAAoD,CAAC,CAAC,IAAtD;;AACA,QAAA,MAAI,CAAC,kBAAL,CAAwB,CAAxB;AACH,OAHD;;AAKA,WAAK,WAAL,CAAiB,OAAjB,GAA2B,YAAK;AAC5B,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,cAAiB,MAAI,CAAC,YAAtB,sBAAqD,MAAI,CAAC,IAA1D;;AACA,QAAA,MAAI,CAAC,KAAL;AACH,OAHD;AAIH,MAED;;;;6CAC0E;AAAA;;AAAA,UAA7C,IAA6C,QAA7C,IAA6C;AACtE,UAAM,QAAQ,GAAG,IAAI,CAAC,WAAtB;AAEA,UAAM,qBAAqB,GACvB,KAAK,aAAL,KAAuB,OAAA,CAAA,iBAAA,CAAkB,MAAzC,IAAmD,KAAK,aAAL,KAAuB,OAAA,CAAA,iBAAA,CAAkB,UADhG;AAGA,UAAI,gBAAgB,GAAQ,IAA5B;;AAEA,UAAI,qBAAJ,EAA2B;AACvB,YAAI,QAAQ,KAAK,IAAjB,EAAuB;AACnB;AACA,UAAA,MAAA,CAAA,IAAA,CAAK,iBAAL,CAAuB,IAAvB,EAAqC,UAAC,EAAD,EAAO;AACxC,gBAAM,YAAY,GAAG,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,EAAZ,CAArB;;AACA,YAAA,MAAI,CAAC,IAAL,CAAU,OAAA,CAAA,mBAAA,CAAoB,IAA9B,EAAoC,YAApC;AACH,WAHD;AAIA;AACH,SAPD,MAOO,IAAI,QAAQ,KAAK,WAAjB,EAA8B;AACjC,UAAA,gBAAgB,GAAG,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,IAAZ,CAAnB;AACH,SAFM,MAEA,IAAI,QAAQ,KAAK,MAAjB,EAAyB;AAC5B;AACA,cAAM,EAAE,GAAG,MAAA,CAAA,IAAA,CAAK,yBAAL,CAA+B,IAA/B,CAAX;AACA,UAAA,gBAAgB,GAAG,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,EAAZ,CAAnB;AACH;AACJ,OAfD,MAeO,IAAI,KAAK,aAAL,KAAuB,OAAA,CAAA,iBAAA,CAAkB,IAA7C,EAAmD;AACtD,QAAA,gBAAgB,GAAG,KAAK,KAAL,CAAW,IAAX,CAAnB;AACH,OAzBqE,CA2BtE;AACA;;;AACA,UAAI,gBAAgB,CAAC,UAArB,EAAiC;AAC7B,aAAK,YAAL,CAAkB,gBAAlB;;AACA;AACH;;AAED,+EAAW,OAAA,CAAA,mBAAA,CAAoB,IAA/B,EAAqC,gBAArC;AACH;;;iCAEoB,MAAkE;AACnF,UAAM,EAAE,GAAG,IAAI,CAAC,UAAhB;AACA,UAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,EAAlB,KAAyB;AACvC,QAAA,IAAI,EAAE,EADiC;AAEvC,QAAA,KAAK,EAAE,CAFgC;AAGvC,QAAA,KAAK,EAAE,IAAI,CAAC;AAH2B,OAA3C;AAMA,MAAA,SAAS,CAAC,IAAV,CAAe,IAAI,CAAC,CAApB,IAAyB,IAAI,CAAC,IAA9B;AACA,MAAA,SAAS,CAAC,KAAV;AACA,WAAK,YAAL,CAAkB,EAAlB,IAAwB,SAAxB;;AAEA,UAAI,SAAS,CAAC,KAAV,KAAoB,SAAS,CAAC,KAAlC,EAAyC;AACrC;AACA,eAAO,KAAK,YAAL,CAAkB,EAAlB,CAAP,CAFqC,CAIrC;;AACA,YAAM,KAAI,GAAG,IAAI,IAAJ,CAAS,SAAS,CAAC,IAAnB,CAAb;;AACA,aAAK,kBAAL,CAAwB;AAAE,UAAA,IAAI,EAAJ;AAAF,SAAxB;AACH;AACJ;AAED;;;;AAIA;;;;4BACK;AACD,WAAK,OAAL,GAAe,EAAf;AACA,WAAK,WAAL,GAAmB,CAAnB;AACA,WAAK,YAAL,GAAoB,EAApB;;AAEA,UAAI,KAAK,WAAT,EAAsB;AAClB,aAAK,WAAL,CAAiB,OAAjB;;AACA,aAAK,WAAL,GAAmB,IAAnB;AACH;;AAED,UAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,CAAc,iBAAd,CAAgC,IAAhC;;AAEA,aAAK,QAAL,GAAgB,IAAhB;AACH;;AAED,UAAI,KAAK,WAAT,EAAsB;AAClB,aAAK,WAAL,CAAiB,MAAjB,GAA0B,IAA1B;AACA,aAAK,WAAL,CAAiB,SAAjB,GAA6B,IAA7B;AACA,aAAK,WAAL,CAAiB,OAAjB,GAA2B,IAA3B;AACA,aAAK,GAAL,GAAW,IAAX;AACH;;AAED,UAAI,KAAK,cAAT,EAAyB;AACrB,aAAK,cAAL,CAAoB,OAApB;;AACA,aAAK,cAAL,CAAoB,kBAApB;;AACA,aAAK,cAAL,GAAsB,IAAtB;AACH;;AAED,UAAI,CAAC,KAAK,IAAV,EAAgB;AACZ;AACH;;AAED,WAAK,KAAL,GAAa,KAAb;;AAEA,+EAAW,OAAA,CAAA,mBAAA,CAAoB,KAA/B;AACH;AAED;;;;yBACK,MAAW,SAAiB;AAC7B,UAAI,CAAC,KAAK,IAAV,EAAgB;AACZ,iFACI,OAAA,CAAA,mBAAA,CAAoB,KADxB,EAEI,IAAI,KAAJ,CAAU,yFAAV,CAFJ;;AAIA;AACH;;AAED,UAAI,KAAK,aAAL,KAAuB,OAAA,CAAA,iBAAA,CAAkB,IAA7C,EAAmD;AAC/C,aAAK,aAAL,CAAmB,KAAK,SAAL,CAAe,IAAf,CAAnB;AACH,OAFD,MAEO,IACH,KAAK,aAAL,KAAuB,OAAA,CAAA,iBAAA,CAAkB,MAAzC,IACA,KAAK,aAAL,KAAuB,OAAA,CAAA,iBAAA,CAAkB,UAFtC,EAGL;AACE,YAAM,IAAI,GAAG,MAAA,CAAA,IAAA,CAAK,IAAL,CAAU,IAAV,CAAb;;AAEA,YAAI,CAAC,OAAD,IAAY,IAAI,CAAC,IAAL,GAAY,MAAA,CAAA,IAAA,CAAK,UAAjC,EAA6C;AACzC,eAAK,WAAL,CAAiB,IAAjB;;AACA;AACH;;AAED,YAAI,CAAC,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,UAAnB,EAA+B;AAC3B;AACA;AACA,eAAK,cAAL,CAAoB,KAApB,CAA0B,IAA1B;AACH,SAJD,MAIO;AACH,eAAK,aAAL,CAAmB,IAAnB;AACH;AACJ,OAlBM,MAkBA;AACH,aAAK,aAAL,CAAmB,IAAnB;AACH;AACJ;;;kCAEqB,KAAQ;AAC1B,UAAI,KAAK,UAAL,IAAmB,CAAC,KAAK,QAAL,CAAc,GAAd,CAAxB,EAA4C;AACxC,aAAK,OAAL,CAAa,IAAb,CAAkB,GAAlB;;AACA,aAAK,WAAL,GAAmB,KAAK,OAAL,CAAa,MAAhC;AACH;AACJ,MAED;;;;6BACiB,KAAQ;AAAA;;AACrB,UAAI,CAAC,KAAK,IAAV,EAAgB;AACZ,eAAO,KAAP;AACH;;AAED,UAAI,KAAK,WAAL,CAAiB,cAAjB,GAAkC,cAAc,CAAC,mBAArD,EAA0E;AACtE,aAAK,UAAL,GAAkB,IAAlB;AACA,QAAA,UAAU,CAAC,YAAK;AACZ,UAAA,MAAI,CAAC,UAAL,GAAkB,KAAlB;;AACA,UAAA,MAAI,CAAC,UAAL;AACH,SAHS,EAGP,EAHO,CAAV;AAKA,eAAO,KAAP;AACH;;AAED,UAAI;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,GAAtB;AACH,OAFD,CAEE,OAAO,CAAP,EAAU;AACR,QAAA,QAAA,CAAA,OAAA,CAAO,KAAP,eAAoB,KAAK,YAAzB,2BAA6D,CAA7D;AACA,aAAK,UAAL,GAAkB,IAAlB;AAEA,aAAK,KAAL;AAEA,eAAO,KAAP;AACH;;AAED,aAAO,IAAP;AACH,MAED;;;;iCACkB;AACd,UAAI,CAAC,KAAK,IAAV,EAAgB;AACZ;AACH;;AAED,UAAI,KAAK,OAAL,CAAa,MAAb,KAAwB,CAA5B,EAA+B;AAC3B;AACH;;AAED,UAAM,GAAG,GAAG,KAAK,OAAL,CAAa,CAAb,CAAZ;;AAEA,UAAI,KAAK,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACpB,aAAK,OAAL,CAAa,KAAb;;AACA,aAAK,WAAL,GAAmB,KAAK,OAAL,CAAa,MAAhC;;AACA,aAAK,UAAL;AACH;AACJ;;;gCAEmB,MAAU;AAC1B,UAAM,KAAK,GAAG,MAAA,CAAA,IAAA,CAAK,KAAL,CAAW,IAAX,CAAd;AACA,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,cAAiB,KAAK,YAAtB,0BAAkD,KAAK,CAAC,MAAxD;AAF0B;AAAA;AAAA;;AAAA;AAI1B,6BAAiB,KAAjB,8HAAwB;AAAA,cAAf,KAAe;AACpB,eAAK,IAAL,CAAU,KAAV,EAAgB,IAAhB;AACH;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO7B;;;kCAEa,SAAsB;AAChC,UAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;;AAEA,cAAQ,OAAO,CAAC,IAAhB;AACI,aAAK,OAAA,CAAA,iBAAA,CAAkB,MAAvB;AACI,eAAK,WAAL,CAAiB,SAAjB,CAA2B,OAAO,CAAC,IAAnC,EAAyC,OAAO,CAAC,GAAjD;;AACA;;AACJ,aAAK,OAAA,CAAA,iBAAA,CAAkB,SAAvB;AACI,eAAK,WAAL,CAAiB,eAAjB,CAAiC,OAAO,CAAC,SAAzC;;AACA;;AACJ;AACI,UAAA,QAAA,CAAA,OAAA,CAAO,IAAP,CAAY,4BAAZ,EAA0C,OAAO,CAAC,IAAlD,EAAwD,YAAxD,EAAsE,KAAK,IAA3E;AACA;AATR;AAWH;;;wBA1SO;AACJ,aAAO,OAAA,CAAA,cAAA,CAAe,IAAtB;AACH;;;wBAgBc;AACX,aAAO,KAAK,GAAZ;AACH;;;wBAEa;AACV,aAAO,KAAK,WAAZ;AACH;;;;EAnC+B,gBAAA,CAAA;;AAApC,OAAA,CAAA,cAAA,GAAA,cAAA;AAC4B,cAAA,CAAA,SAAA,GAAY,KAAZ;AACA,cAAA,CAAA,mBAAA,GAAsB,IAAI,IAAJ,GAAW,IAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf5B,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;IAEa;;;AACX,eAA6B,QAA7B,EAA0C;AAAA;;AAAb,SAAA,QAAA,GAAA,QAAA;AAAkB;;;;8BAE7B,QAAc;AAC9B,UAAM,QAAQ,GAAG,KAAK,QAAL,CAAc,MAAd,GAAuB,UAAvB,GAAoC,SAArD;AACA,UAAI,GAAG,GACL,QAAQ,GACR,KAAK,QAAL,CAAc,IADd,GAEA,GAFA,GAGA,KAAK,QAAL,CAAc,IAHd,GAIA,KAAK,QAAL,CAAc,IAJd,GAKA,KAAK,QAAL,CAAc,GALd,GAMA,GANA,GAOA,MARF;AASA,UAAM,WAAW,GAAG,SAAS,IAAI,IAAJ,GAAW,OAAX,EAAT,GAAgC,EAAhC,GAAqC,IAAI,CAAC,MAAL,EAAzD;AACA,MAAA,GAAG,IAAI,WAAP;AAEA,aAAO,GAAP;AACD;AAED;;;;iCACgB;;;;;;;;;AACR,gBAAA,MAAM,KAAK,SAAL,CAAe,IAAf;;;AAGO,uBAAM,KAAK,CAAC,GAAD,CAAX;;;AAAX,gBAAA;;sBAEF,QAAQ,CAAC,MAAT,KAAoB;;;;;sBAChB,IAAI,KAAJ,yBAA2B,QAAQ,CAAC,MAApC;;;iDAGD,QAAQ,CAAC,IAAT;;;;;AAEP,gBAAA,QAAA,CAAA,OAAA,CAAO,KAAP,CAAa,qBAAb;AAEI,gBAAA,YAAY;;AAEhB,oBACE,KAAK,QAAL,CAAc,IAAd,KAAuB,GAAvB,IACA,KAAK,QAAL,CAAc,IAAd,KAAuB,MAAA,CAAA,IAAA,CAAK,UAF9B,EAGE;AACA,kBAAA,SAAS,GACP,gEACA,iEADA,GAEA,OAHF;AAID;;sBAEK,IAAI,KAAJ,CAAU,yCAAyC,SAAnD;;;;;;;;;AAET;AAED;;;;mCACkB;;;;;;;;;AACV,gBAAA,MAAM,KAAK,SAAL,CAAe,OAAf;;;AAGO,uBAAM,KAAK,CAAC,GAAD,CAAX;;;AAAX,gBAAA;;sBAEF,QAAQ,CAAC,MAAT,KAAoB;;;;;sBAClB,QAAQ,CAAC,MAAT,KAAoB;;;;;AAClB,gBAAA,eAAe;;AAEnB,oBAAI,KAAK,QAAL,CAAc,IAAd,KAAuB,MAAA,CAAA,IAAA,CAAK,UAAhC,EAA4C;AAC1C,kBAAA,YAAY,GACV,gEACA,0DAFF;AAGD,iBAJD,MAIO;AACL,kBAAA,YAAY,GACV,8DACA,iCAFF;AAGD;;sBAEK,IAAI,KAAJ,CAAU,iEACd,YADI;;;sBAIF,IAAI,KAAJ,yBAA2B,QAAQ,CAAC,MAApC;;;kDAGD,QAAQ,CAAC,IAAT;;;;;AAEP,gBAAA,QAAA,CAAA,OAAA,CAAO,KAAP,CAAa,6BAAb;sBAEM,IAAI,KAAJ,CAAU,0DAAV;;;;;;;;;AAET;;;;;;AArFH,OAAA,CAAA,GAAA,GAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAGA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;IAGM;;;AAaN;;;;;IAGa;;;;;AAsDT,gBAAY,EAAZ,EAAuC,OAAvC,EAA4D;AAAA;;AAAA;;AACxD;AAhDI,UAAA,GAAA,GAAqB,IAArB;AACA,UAAA,aAAA,GAA+B,IAA/B,CA8CoD,CA5C5D;;AACQ,UAAA,UAAA,GAAa,KAAb,CA2CoD,CA3ChC;;AACpB,UAAA,aAAA,GAAgB,KAAhB,CA0CoD,CA1C7B;;AACvB,UAAA,KAAA,GAAQ,KAAR,CAyCoD,CAzCrC;;AACN,UAAA,YAAA,GAA8C,IAAI,GAAJ,EAA9C,CAwC2C,CAxCc;;AACzD,UAAA,aAAA,GAA8C,IAAI,GAAJ,EAA9C,CAuC2C,CAvCc;;AA0CtE,QAAI,MAAJ,CAHwD,CAKxD;;AACA,QAAI,EAAE,IAAI,EAAE,CAAC,WAAH,IAAkB,MAA5B,EAAoC;AAChC,MAAA,OAAO,GAAG,EAAV;AACH,KAFD,MAEO,IAAI,EAAJ,EAAQ;AACX,MAAA,MAAM,GAAG,EAAE,CAAC,QAAH,EAAT;AACH,KAVuD,CAYxD;;;AACA,IAAA,OAAO,GAAA,MAAA,CAAA,MAAA,CAAA;AACH,MAAA,KAAK,EAAE,CADJ;AAEH,MAAA,IAAI,EAAE,MAAA,CAAA,IAAA,CAAK,UAFR;AAGH,MAAA,IAAI,EAAE,MAAA,CAAA,IAAA,CAAK,UAHR;AAIH,MAAA,IAAI,EAAE,GAJH;AAKH,MAAA,GAAG,EAAE,IAAI,CAAC,WALP;AAMH,MAAA,KAAK,EAAE,MAAA,CAAA,IAAA,CAAK,WAAL,EANJ;AAOH,MAAA,MAAM,EAAE,MAAA,CAAA,IAAA,CAAK;AAPV,KAAA,EAQA,OARA,CAAP;AAUA,UAAK,QAAL,GAAgB,OAAhB,CAvBwD,CAyBxD;AACA;AACA;AACA;AAEA;;AACA,QAAI,MAAK,QAAL,CAAc,IAAlB,EAAwB;AACpB,UAAI,MAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB,MAA0B,GAA9B,EAAmC;AAC/B,cAAK,QAAL,CAAc,IAAd,GAAqB,MAAM,MAAK,QAAL,CAAc,IAAzC;AACH;;AACD,UAAI,MAAK,QAAL,CAAc,IAAd,CAAmB,MAAK,QAAL,CAAc,IAAd,CAAmB,MAAnB,GAA4B,CAA/C,MAAsD,GAA1D,EAA+D;AAC3D,cAAK,QAAL,CAAc,IAAd,IAAsB,GAAtB;AACH;AACJ,KAtCuD,CAwCxD;;;AACA,QAAI,MAAK,QAAL,CAAc,MAAd,KAAyB,SAAzB,IAAsC,MAAK,QAAL,CAAc,IAAd,KAAuB,MAAA,CAAA,IAAA,CAAK,UAAtE,EAAkF;AAC9E,YAAK,QAAL,CAAc,MAAd,GAAuB,MAAA,CAAA,IAAA,CAAK,QAAL,EAAvB;AACH,KAFD,MAEO,IAAI,MAAK,QAAL,CAAc,IAAd,IAAsB,MAAA,CAAA,IAAA,CAAK,UAA/B,EAA2C;AAC9C,YAAK,QAAL,CAAc,MAAd,GAAuB,IAAvB;AACH,KA7CuD,CA8CxD;;;AACA,QAAI,MAAK,QAAL,CAAc,WAAlB,EAA+B;AAC3B,MAAA,QAAA,CAAA,OAAA,CAAO,cAAP,CAAsB,MAAK,QAAL,CAAc,WAApC;AACH;;AAED,IAAA,QAAA,CAAA,OAAA,CAAO,QAAP,GAAkB,MAAK,QAAL,CAAc,KAAd,IAAuB,CAAzC;AAEA,UAAK,IAAL,GAAY,IAAI,KAAA,CAAA,GAAJ,CAAQ,OAAR,CAAZ;AACA,UAAK,OAAL,GAAe,MAAK,uBAAL,EAAf,CAtDwD,CAwDxD;AACA;;AACA,QAAI,CAAC,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,UAAf,IAA6B,CAAC,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,IAAhD,EAAsD;AAClD,YAAK,aAAL,CAAmB,OAAA,CAAA,aAAA,CAAc,mBAAjC,EAAsD,6CAAtD;;AACA;AACH,KA7DuD,CA+DxD;;;AACA,QAAI,CAAC,CAAC,MAAF,IAAY,CAAC,MAAA,CAAA,IAAA,CAAK,UAAL,CAAgB,MAAhB,CAAjB,EAA0C;AACtC,YAAK,aAAL,CAAmB,OAAA,CAAA,aAAA,CAAc,SAAjC,iBAAmD,MAAnD;;AACA;AACH;;AAED,QAAI,MAAJ,EAAY;AACR,YAAK,WAAL,CAAiB,MAAjB;AACH,KAFD,MAEO;AACH,YAAK,IAAL,CACK,UADL,GAEK,IAFL,CAEU,UAAC,EAAD;AAAA,eAAQ,MAAK,WAAL,CAAiB,EAAjB,CAAR;AAAA,OAFV,EAGK,KAHL,CAGW,UAAC,KAAD;AAAA,eAAW,MAAK,MAAL,CAAY,OAAA,CAAA,aAAA,CAAc,WAA1B,EAAuC,KAAvC,CAAX;AAAA,OAHX;AAIH;;AA5EuD;AA6E3D;;;;8CAE8B;AAAA;;AAC3B,UAAM,MAAM,GAAG,IAAI,QAAA,CAAA,MAAJ,CACX,KAAK,QAAL,CAAc,MADH,EAEX,KAAK,QAAL,CAAc,IAFH,EAGX,KAAK,QAAL,CAAc,IAHH,EAIX,KAAK,QAAL,CAAc,IAJH,EAKX,KAAK,QAAL,CAAc,GALH,EAMX,KAAK,QAAL,CAAc,YANH,CAAf;AASA,MAAA,MAAM,CAAC,EAAP,CAAU,OAAA,CAAA,eAAA,CAAgB,OAA1B,EAAmC,UAAC,IAAD,EAAwB;AACvD,QAAA,MAAI,CAAC,cAAL,CAAoB,IAApB;AACH,OAFD;AAIA,MAAA,MAAM,CAAC,EAAP,CAAU,OAAA,CAAA,eAAA,CAAgB,KAA1B,EAAiC,UAAC,KAAD,EAAkB;AAC/C,QAAA,MAAI,CAAC,MAAL,CAAY,OAAA,CAAA,aAAA,CAAc,WAA1B,EAAuC,KAAvC;AACH,OAFD;AAIA,MAAA,MAAM,CAAC,EAAP,CAAU,OAAA,CAAA,eAAA,CAAgB,YAA1B,EAAwC,YAAK;AACzC,YAAI,MAAI,CAAC,YAAT,EAAuB;AACnB;AACH;;AAED,QAAA,MAAI,CAAC,SAAL,CAAe,OAAA,CAAA,aAAA,CAAc,OAA7B,EAAsC,4BAAtC;;AACA,QAAA,MAAI,CAAC,UAAL;AACH,OAPD;AASA,MAAA,MAAM,CAAC,EAAP,CAAU,OAAA,CAAA,eAAA,CAAgB,KAA1B,EAAiC,YAAK;AAClC,YAAI,MAAI,CAAC,YAAT,EAAuB;AACnB;AACH;;AAED,QAAA,MAAI,CAAC,MAAL,CAAY,OAAA,CAAA,aAAA,CAAc,YAA1B,EAAwC,sCAAxC;AACH,OAND;AAQA,aAAO,MAAP;AACH;AAED;;;;gCACoB,IAAU;AAC1B,WAAK,GAAL,GAAW,EAAX;AACA,WAAK,MAAL,CAAY,KAAZ,CAAkB,EAAlB,EAAsB,KAAK,QAAL,CAAc,KAApC;AACH;AAED;;;;mCACuB,SAAsB;AACzC,UAAM,IAAI,GAAG,OAAO,CAAC,IAArB;AACA,UAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;AACA,UAAM,MAAM,GAAG,OAAO,CAAC,GAAvB;;AAEA,cAAQ,IAAR;AACI,aAAK,OAAA,CAAA,iBAAA,CAAkB,IAAvB;AAA6B;AACzB,eAAK,aAAL,GAAqB,KAAK,EAA1B;AACA,eAAK,KAAL,GAAa,IAAb;AACA,eAAK,IAAL,CAAU,OAAA,CAAA,aAAA,CAAc,IAAxB,EAA8B,KAAK,EAAnC;AACA;;AACJ,aAAK,OAAA,CAAA,iBAAA,CAAkB,KAAvB;AAA8B;AAC1B,eAAK,MAAL,CAAY,OAAA,CAAA,aAAA,CAAc,WAA1B,EAAuC,OAAO,CAAC,GAA/C;;AACA;;AACJ,aAAK,OAAA,CAAA,iBAAA,CAAkB,OAAvB;AAAgC;AAC5B,eAAK,MAAL,CAAY,OAAA,CAAA,aAAA,CAAc,aAA1B,iBAAgD,KAAK,EAArD;;AACA;;AACJ,aAAK,OAAA,CAAA,iBAAA,CAAkB,UAAvB;AAAmC;AAC/B,eAAK,MAAL,CAAY,OAAA,CAAA,aAAA,CAAc,UAA1B,sBAAkD,KAAK,QAAL,CAAc,GAAhE;;AACA;;AACJ,aAAK,OAAA,CAAA,iBAAA,CAAkB,KAAvB;AAA8B;AAC1B,UAAA,QAAA,CAAA,OAAA,CAAO,GAAP,uCAA0C,MAA1C;;AACA,eAAK,YAAL,CAAkB,MAAlB;;AACA,eAAK,YAAL,CAAkB,MAAlB,CAAyB,MAAzB;;AACA;;AACJ,aAAK,OAAA,CAAA,iBAAA,CAAkB,MAAvB;AAA+B;AAC3B,eAAK,SAAL,CAAe,OAAA,CAAA,aAAA,CAAc,eAA7B,sCAA2E,MAA3E;AACA;;AACJ,aAAK,OAAA,CAAA,iBAAA,CAAkB,KAAvB;AAA8B;AAC1B;AACA,gBAAM,YAAY,GAAG,OAAO,CAAC,YAA7B;AACA,gBAAI,UAAU,GAAG,KAAK,aAAL,CAAmB,MAAnB,EAA2B,YAA3B,CAAjB;;AAEA,gBAAI,UAAJ,EAAgB;AACZ,cAAA,UAAU,CAAC,KAAX;AACA,cAAA,QAAA,CAAA,OAAA,CAAO,IAAP,qDAAyD,YAAzD;AACH,aARyB,CAU1B;;;AACA,gBAAI,OAAO,CAAC,IAAR,KAAiB,OAAA,CAAA,cAAA,CAAe,KAApC,EAA2C;AACvC,cAAA,UAAU,GAAG,IAAI,iBAAA,CAAA,eAAJ,CAAoB,MAApB,EAA4B,IAA5B,EAAkC;AAC3C,gBAAA,YAAY,EAAE,YAD6B;AAE3C,gBAAA,QAAQ,EAAE,OAFiC;AAG3C,gBAAA,QAAQ,EAAE,OAAO,CAAC;AAHyB,eAAlC,CAAb;;AAKA,mBAAK,cAAL,CAAoB,MAApB,EAA4B,UAA5B;;AACA,mBAAK,IAAL,CAAU,OAAA,CAAA,aAAA,CAAc,IAAxB,EAA8B,UAA9B;AACH,aARD,MAQO,IAAI,OAAO,CAAC,IAAR,KAAiB,OAAA,CAAA,cAAA,CAAe,IAApC,EAA0C;AAC7C,cAAA,UAAU,GAAG,IAAI,gBAAA,CAAA,cAAJ,CAAmB,MAAnB,EAA2B,IAA3B,EAAiC;AAC1C,gBAAA,YAAY,EAAE,YAD4B;AAE1C,gBAAA,QAAQ,EAAE,OAFgC;AAG1C,gBAAA,QAAQ,EAAE,OAAO,CAAC,QAHwB;AAI1C,gBAAA,KAAK,EAAE,OAAO,CAAC,KAJ2B;AAK1C,gBAAA,aAAa,EAAE,OAAO,CAAC,aALmB;AAM1C,gBAAA,QAAQ,EAAE,OAAO,CAAC;AANwB,eAAjC,CAAb;;AAQA,mBAAK,cAAL,CAAoB,MAApB,EAA4B,UAA5B;;AACA,mBAAK,IAAL,CAAU,OAAA,CAAA,aAAA,CAAc,UAAxB,EAAoC,UAApC;AACH,aAXM,MAWA;AACH,cAAA,QAAA,CAAA,OAAA,CAAO,IAAP,8CAAkD,OAAO,CAAC,IAA1D;AACA;AACH,aAjCyB,CAmC1B;;;AACA,gBAAM,QAAQ,GAAG,KAAK,YAAL,CAAkB,YAAlB,CAAjB;;AApC0B;AAAA;AAAA;;AAAA;AAqC1B,mCAAoB,QAApB,8HAA8B;AAAA,oBAArB,QAAqB;AAC1B,gBAAA,UAAU,CAAC,aAAX,CAAyB,QAAzB;AACH;AAvCyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyC1B;AACH;;AACD;AAAS;AACL,gBAAI,CAAC,OAAL,EAAc;AACV,cAAA,QAAA,CAAA,OAAA,CAAO,IAAP,iDAAqD,MAArD,sBAAuE,IAAvE;AACA;AACH;;AAED,gBAAM,aAAY,GAAG,OAAO,CAAC,YAA7B;;AACA,gBAAM,WAAU,GAAG,KAAK,aAAL,CAAmB,MAAnB,EAA2B,aAA3B,CAAnB;;AAEA,gBAAI,WAAU,IAAI,WAAU,CAAC,cAA7B,EAA6C;AACzC;AACA,cAAA,WAAU,CAAC,aAAX,CAAyB,OAAzB;AACH,aAHD,MAGO,IAAI,aAAJ,EAAkB;AACrB;AACA,mBAAK,aAAL,CAAmB,aAAnB,EAAiC,OAAjC;AACH,aAHM,MAGA;AACH,cAAA,QAAA,CAAA,OAAA,CAAO,IAAP,CAAY,uCAAZ,EAAqD,OAArD;AACH;;AACD;AACH;AArFL;AAuFH;AAED;;;;kCACsB,cAAsB,SAAsB;AAC9D,UAAI,CAAC,KAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB,CAAL,EAA2C;AACvC,aAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB,EAAqC,EAArC;AACH;;AAED,WAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB,EAAqC,IAArC,CAA0C,OAA1C;AACH;AAED;AACA;;;;iCACoB,cAAoB;AACpC,UAAM,QAAQ,GAAG,KAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB,CAAjB;;AAEA,UAAI,QAAJ,EAAc;AACV,aAAK,aAAL,CAAmB,MAAnB,CAA0B,YAA1B;;AACA,eAAO,QAAP;AACH;;AAED,aAAO,EAAP;AACH;AAED;;;;;;;4BAIQ,MAA6C;AAAA,UAA/B,OAA+B,uEAAF,EAAE;;AACjD,UAAI,KAAK,YAAT,EAAuB;AACnB,QAAA,QAAA,CAAA,OAAA,CAAO,IAAP,CACI,yDACI,gEADJ,GAEI,oEAFJ,GAGI,2DAJR;AAMA,aAAK,SAAL,CAAe,OAAA,CAAA,aAAA,CAAc,YAA7B,EAA2C,6DAA3C;AACA;AACH;;AAED,UAAM,cAAc,GAAG,IAAI,gBAAA,CAAA,cAAJ,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B,OAA/B,CAAvB;;AACA,WAAK,cAAL,CAAoB,IAApB,EAA0B,cAA1B;;AACA,aAAO,cAAP;AACH;AAED;;;;;;;yBAIK,MAAc,QAAsC;AAAA,UAAjB,OAAiB,uEAAF,EAAE;;AACrD,UAAI,KAAK,YAAT,EAAuB;AACnB,QAAA,QAAA,CAAA,OAAA,CAAO,IAAP,CACI,yDACI,gEADJ,GAEI,iDAHR;AAKA,aAAK,SAAL,CAAe,OAAA,CAAA,aAAA,CAAc,YAA7B,EAA2C,6DAA3C;AACA;AACH;;AAED,UAAI,CAAC,MAAL,EAAa;AACT,QAAA,QAAA,CAAA,OAAA,CAAO,KAAP,CAAa,+EAAb;AACA;AACH;;AAED,MAAA,OAAO,CAAC,OAAR,GAAkB,MAAlB;AAEA,UAAM,eAAe,GAAG,IAAI,iBAAA,CAAA,eAAJ,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,OAAhC,CAAxB;;AACA,WAAK,cAAL,CAAoB,IAApB,EAA0B,eAA1B;;AACA,aAAO,eAAP;AACH;AAED;;;;mCACuB,QAAgB,YAA0B;AAC7D,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,0BAA6B,UAAU,CAAC,IAAxC,cAAgD,UAAU,CAAC,YAA3D,wBAAqF,MAArF;;AAEA,UAAI,CAAC,KAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,CAAL,EAAoC;AAChC,aAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,EAA8B,EAA9B;AACH;;AACD,WAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,EAA8B,IAA9B,CAAmC,UAAnC;AACH,MAED;;;;sCACkB,YAA0B;AACxC,UAAM,WAAW,GAAG,KAAK,YAAL,CAAkB,GAAlB,CAAsB,UAAU,CAAC,IAAjC,CAApB;;AAEA,UAAI,WAAJ,EAAiB;AACb,YAAM,KAAK,GAAG,WAAW,CAAC,OAAZ,CAAoB,UAApB,CAAd;;AAEA,YAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,UAAA,WAAW,CAAC,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B;AACH;AACJ,OATuC,CAWxC;;;AACA,WAAK,aAAL,CAAmB,MAAnB,CAA0B,UAAU,CAAC,YAArC;AACH;AAED;;;;kCACc,QAAgB,cAAoB;AAC9C,UAAM,WAAW,GAAG,KAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,CAApB;;AACA,UAAI,CAAC,WAAL,EAAkB;AACd,eAAO,IAAP;AACH;;AAJ6C;AAAA;AAAA;;AAAA;AAM9C,8BAAuB,WAAvB,mIAAoC;AAAA,cAA3B,UAA2B;;AAChC,cAAI,UAAU,CAAC,YAAX,KAA4B,YAAhC,EAA8C;AAC1C,mBAAO,UAAP;AACH;AACJ;AAV6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY9C,aAAO,IAAP;AACH;;;kCAEqB,MAAqB,SAAuB;AAAA;;AAC9D,MAAA,UAAU,CAAC,YAAK;AACZ,QAAA,MAAI,CAAC,MAAL,CAAY,IAAZ,EAAkB,OAAlB;AACH,OAFS,EAEP,CAFO,CAAV;AAGH;AAED;;;;;;;;2BAKe,MAAqB,SAAuB;AACvD,MAAA,QAAA,CAAA,OAAA,CAAO,KAAP,CAAa,WAAb;AAEA,WAAK,SAAL,CAAe,IAAf,EAAqB,OAArB;;AAEA,UAAI,CAAC,KAAK,aAAV,EAAyB;AACrB,aAAK,OAAL;AACH,OAFD,MAEO;AACH,aAAK,UAAL;AACH;AACJ;AAED;;;;8BACU,MAAqB,KAAmB;AAC9C,MAAA,QAAA,CAAA,OAAA,CAAO,KAAP,CAAa,QAAb,EAAuB,GAAvB;AAEA,UAAI,KAAJ;;AAEA,UAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AACzB,QAAA,KAAK,GAAG,IAAI,KAAJ,CAAU,GAAV,CAAR;AACH,OAFD,MAEO;AACH,QAAA,KAAK,GAAG,GAAR;AACH;;AAED,MAAA,KAAK,CAAC,IAAN,GAAa,IAAb;AAEA,WAAK,IAAL,CAAU,OAAA,CAAA,aAAA,CAAc,KAAxB,EAA+B,KAA/B;AACH;AAED;;;;;;;;;8BAMO;AACH,UAAI,KAAK,SAAT,EAAoB;AAChB;AACH;;AAED,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,gCAAmC,KAAK,EAAxC;AAEA,WAAK,UAAL;;AACA,WAAK,QAAL;;AAEA,WAAK,UAAL,GAAkB,IAAlB;AAEA,WAAK,IAAL,CAAU,OAAA,CAAA,aAAA,CAAc,KAAxB;AACH;AAED;;;;+BACgB;AAAA;AAAA;AAAA;;AAAA;AACZ,8BAAmB,KAAK,YAAL,CAAkB,IAAlB,EAAnB,mIAA6C;AAAA,cAApC,MAAoC;;AACzC,eAAK,YAAL,CAAkB,MAAlB;;AACA,eAAK,YAAL,CAAkB,MAAlB,CAAyB,MAAzB;AACH;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMZ,WAAK,MAAL,CAAY,kBAAZ;AACH;AAED;;;;iCACqB,QAAc;AAC/B,UAAM,WAAW,GAAG,KAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,CAApB;;AAEA,UAAI,CAAC,WAAL,EAAkB;AAHa;AAAA;AAAA;;AAAA;AAK/B,8BAAuB,WAAvB,mIAAoC;AAAA,cAA3B,UAA2B;AAChC,UAAA,UAAU,CAAC,KAAX;AACH;AAP8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQlC;AAED;;;;;;;;;iCAMU;AACN,UAAI,KAAK,YAAT,EAAuB;AACnB;AACH;;AAED,UAAM,SAAS,GAAG,KAAK,EAAvB;AAEA,MAAA,QAAA,CAAA,OAAA,CAAO,GAAP,mCAAsC,SAAtC;AAEA,WAAK,aAAL,GAAqB,IAArB;AACA,WAAK,KAAL,GAAa,KAAb;AAEA,WAAK,MAAL,CAAY,KAAZ;AAEA,WAAK,aAAL,GAAqB,SAArB;AACA,WAAK,GAAL,GAAW,IAAX;AAEA,WAAK,IAAL,CAAU,OAAA,CAAA,aAAA,CAAc,YAAxB,EAAsC,SAAtC;AACH;AAED;;;;gCACS;AACL,UAAI,KAAK,YAAL,IAAqB,CAAC,KAAK,SAA/B,EAA0C;AACtC,QAAA,QAAA,CAAA,OAAA,CAAO,GAAP,qDAAwD,KAAK,aAA7D;AACA,aAAK,aAAL,GAAqB,KAArB;;AACA,aAAK,WAAL,CAAiB,KAAK,aAAtB;AACH,OAJD,MAIO,IAAI,KAAK,SAAT,EAAoB;AACvB,cAAM,IAAI,KAAJ,CAAU,0EAAV,CAAN;AACH,OAFM,MAEA,IAAI,CAAC,KAAK,YAAN,IAAsB,CAAC,KAAK,IAAhC,EAAsC;AACzC;AACA,QAAA,QAAA,CAAA,OAAA,CAAO,KAAP,CAAa,gEAAb;AACH,OAHM,MAGA;AACH,cAAM,IAAI,KAAJ,gBAAkB,KAAK,EAAvB,uEAAN;AACH;AACJ;AAED;;;;;;;;;mCAMkC;AAAA;;AAAA,UAArB,EAAqB,uEAAhB,UAAC,CAAD,EAAa,CAAG,CAAA;;AAC9B,WAAK,IAAL,CACK,YADL,GAEK,IAFL,CAEU,UAAC,KAAD;AAAA,eAAW,EAAE,CAAC,KAAD,CAAb;AAAA,OAFV,EAGK,KAHL,CAGW,UAAC,KAAD;AAAA,eAAW,MAAI,CAAC,MAAL,CAAY,OAAA,CAAA,aAAA,CAAc,WAA1B,EAAuC,KAAvC,CAAX;AAAA,OAHX;AAIH;;;wBAtfK;AACF,aAAO,KAAK,GAAZ;AACH;;;wBAEU;AACP,aAAO,KAAK,QAAZ;AACH;;;wBAEO;AACJ,aAAO,KAAK,KAAZ;AACH;;;wBAES;AACN,aAAO,KAAK,OAAZ;AACH;AAED;;;;;;;wBAIe;AACX,UAAM,gBAAgB,GAAG,MAAM,CAAC,MAAP,CAAc,IAAd,CAAzB;AADW;AAAA;AAAA;;AAAA;AAGX,8BAAmB,KAAK,YAAxB,mIAAsC;AAAA;AAAA,cAA5B,CAA4B;AAAA,cAAzB,CAAyB;;AAClC,UAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,CAAtB;AACH;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOX,aAAO,gBAAP;AACH;;;wBAEY;AACT,aAAO,KAAK,UAAZ;AACH;;;wBACe;AACZ,aAAO,KAAK,aAAZ;AACH;;;;EApDqB,eAAA,CAAA;;AAA1B,OAAA,CAAA,IAAA,GAAA,IAAA;AAC4B,IAAA,CAAA,WAAA,GAAc,QAAd;;;;;;;;AC7B5B,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEa,OAAA,CAAA,MAAA,GAAS;AAClB,EAAA,IAAI,EAAJ,MAAA,CAAA,IADkB;AAElB,EAAA,IAAI,EAAJ,MAAA,CAAA;AAFkB,CAAT;AAKb,OAAA,CAAA,OAAA,GAAe,MAAA,CAAA,IAAf;AAEA,MAAM,CAAC,OAAP,GAAiB,MAAA,CAAA,IAAjB,EAEA;AACA;AACA","file":"peerjs.js","sourceRoot":"..\\lib","sourcesContent":["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n","var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n","// import { webRTCAdapter } from './adapter';\n\nexport const Supports = new (class {\n    readonly isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform);\n    readonly supportedBrowsers = ['firefox', 'chrome', 'safari'];\n\n    readonly minFirefoxVersion = 59;\n    readonly minChromeVersion = 72;\n    readonly minSafariVersion = 605;\n\n    isWebRTCSupported(): boolean {\n        return typeof RTCPeerConnection !== 'undefined';\n    }\n\n    isBrowserSupported(): boolean {\n        const browser = this.getBrowser();\n        const version = this.getVersion();\n\n        const validBrowser = this.supportedBrowsers.includes(browser);\n\n        if (!validBrowser) return false;\n\n        if (browser === 'chrome') return version >= this.minChromeVersion;\n        if (browser === 'firefox') return version >= this.minFirefoxVersion;\n        if (browser === 'safari') return !this.isIOS && version >= this.minSafariVersion;\n\n        return false;\n    }\n\n    getBrowser(): string {\n        // return webRTCAdapter.browserDetails.browser;\n        return 'chrome';\n    }\n\n    getVersion(): number {\n        // return webRTCAdapter.browserDetails.version || 0;\n        return this.minChromeVersion;\n    }\n\n    isUnifiedPlanSupported(): boolean {\n        // const browser = this.getBrowser();\n        // const version = webRTCAdapter.browserDetails.version || 0;\n\n        // if (browser === 'chrome' && version < 72) return false;\n        // if (browser === 'firefox' && version >= 59) return true;\n        // if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n\n        // let tempPc: RTCPeerConnection;\n        // let supported = false;\n\n        // try {\n        //     tempPc = new RTCPeerConnection();\n        //     tempPc.addTransceiver('audio');\n        //     supported = true;\n        // } catch (e) {\n        // } finally {\n        //     if (tempPc) {\n        //         tempPc.close();\n        //     }\n        // }\n\n        // return supported;\n        return false;\n    }\n\n    toString(): string {\n        return `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n    }\n})();\n","import * as BinaryPack from 'peerjs-js-binarypack';\nimport { Supports } from './supports';\nimport { UtilSupportsObj } from '..';\n\nconst DEFAULT_CONFIG = {\n    iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'turn:0.peerjs.com:3478', username: 'peerjs', credential: 'peerjsp' },\n    ],\n    sdpSemantics: 'unified-plan',\n};\n\nexport const util = new (class {\n    noop(): void {}\n\n    readonly CLOUD_HOST = '0.peerjs.com';\n    readonly CLOUD_PORT = 443;\n\n    // Browsers that need chunking:\n    readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n    readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n    // Returns browser-agnostic default config\n    readonly defaultConfig = DEFAULT_CONFIG;\n\n    readonly browser = Supports.getBrowser();\n    readonly browserVersion = Supports.getVersion();\n\n    // Lists which features are supported\n    readonly supports = (function () {\n        const supported: UtilSupportsObj = {\n            browser: Supports.isBrowserSupported(),\n            webRTC: Supports.isWebRTCSupported(),\n            audioVideo: false,\n            data: false,\n            binaryBlob: false,\n            reliable: false,\n        };\n\n        if (!supported.webRTC) return supported;\n\n        let pc: RTCPeerConnection;\n\n        try {\n            pc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n            supported.audioVideo = true;\n\n            let dc: RTCDataChannel;\n\n            try {\n                dc = pc.createDataChannel('_PEERJSTEST', { ordered: true });\n                supported.data = true;\n                supported.reliable = !!dc.ordered;\n\n                // Binary test\n                try {\n                    dc.binaryType = 'blob';\n                    supported.binaryBlob = !Supports.isIOS;\n                } catch (e) {}\n            } catch (e) {\n            } finally {\n                if (dc) {\n                    dc.close();\n                }\n            }\n        } catch (e) {\n        } finally {\n            if (pc) {\n                pc.close();\n            }\n        }\n\n        return supported;\n    })();\n\n    // Ensure alphanumeric ids\n    validateId(id: string): boolean {\n        // Allow empty ids\n        return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n    }\n\n    pack = BinaryPack.pack;\n    unpack = BinaryPack.unpack;\n\n    // Binary stuff\n\n    private _dataCount: number = 1;\n\n    chunk(blob: Blob): { __peerData: number; n: number; total: number; data: Blob }[] {\n        const chunks = [];\n        const size = blob.size;\n        const total = Math.ceil(size / util.chunkedMTU);\n\n        let index = 0;\n        let start = 0;\n\n        while (start < size) {\n            const end = Math.min(size, start + util.chunkedMTU);\n            const b = blob.slice(start, end);\n\n            const chunk = {\n                __peerData: this._dataCount,\n                n: index,\n                data: b,\n                total,\n            };\n\n            chunks.push(chunk);\n\n            start = end;\n            index++;\n        }\n\n        this._dataCount++;\n\n        return chunks;\n    }\n\n    blobToArrayBuffer(blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n        const fr = new FileReader();\n\n        fr.onload = function (evt) {\n            if (evt.target) {\n                cb(evt.target.result as ArrayBuffer);\n            }\n        };\n\n        fr.readAsArrayBuffer(blob);\n\n        return fr;\n    }\n\n    binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n        const byteArray = new Uint8Array(binary.length);\n\n        for (let i = 0; i < binary.length; i++) {\n            byteArray[i] = binary.charCodeAt(i) & 0xff;\n        }\n\n        return byteArray.buffer;\n    }\n\n    randomToken(): string {\n        return Math.random().toString(36).substr(2);\n    }\n\n    isSecure(): boolean {\n        return true;\n    }\n})();\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();","export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\n\n}","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id?: string;\n  private _messagesQueue: Array<object> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  start(id: string, token: string): void {\n    this._id = id;\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    this._socket = new WebSocket(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log(\"Server message received:\", data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      if (this._disconnected) {\n        return;\n      }\n\n      logger.log(\"Socket closed.\", event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) {\n        return;\n      }\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (!!this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n}\n","import { util } from './util';\nimport logger from './logger';\nimport { MediaConnection } from './mediaconnection';\nimport { DataConnection } from './dataconnection';\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from './enums';\nimport { BaseConnection } from './baseconnection';\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n    constructor(readonly connection: BaseConnection) {}\n\n    /** Returns a PeerConnection object set up correctly (for data, media). */\n    startConnection(options: any) {\n        const peerConnection = this._startPeerConnection();\n\n        // Set the connection's PC.\n        this.connection.peerConnection = peerConnection;\n\n        if (this.connection.type === ConnectionType.Media && options._stream) {\n            this._addTracksToConnection(options._stream, peerConnection);\n        }\n\n        // What do we need to do now?\n        if (options.originator) {\n            if (this.connection.type === ConnectionType.Data) {\n                const dataConnection = <DataConnection>this.connection;\n\n                const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n                const dataChannel = peerConnection.createDataChannel(dataConnection.label, config);\n                dataConnection.initialize(dataChannel);\n            }\n\n            this._makeOffer();\n        } else {\n            this.handleSDP('OFFER', options.sdp);\n        }\n    }\n\n    /** Start a PC. */\n    private _startPeerConnection(): RTCPeerConnection {\n        logger.log('Creating RTCPeerConnection.');\n\n        const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n\n        this._setupListeners(peerConnection);\n\n        return peerConnection;\n    }\n\n    /** Set up various WebRTC listeners. */\n    private _setupListeners(peerConnection: RTCPeerConnection) {\n        const peerId = this.connection.peer;\n        const connectionId = this.connection.connectionId;\n        const connectionType = this.connection.type;\n        const provider = this.connection.provider;\n\n        // ICE CANDIDATES.\n        logger.log('Listening for ICE candidates.');\n\n        peerConnection.onicecandidate = (evt) => {\n            if (!evt.candidate || !evt.candidate.candidate) return;\n\n            logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n            provider.socket.send({\n                type: ServerMessageType.Candidate,\n                payload: {\n                    candidate: evt.candidate,\n                    type: connectionType,\n                    connectionId: connectionId,\n                },\n                dst: peerId,\n            });\n        };\n\n        peerConnection.oniceconnectionstatechange = () => {\n            switch (peerConnection.iceConnectionState) {\n                case 'failed':\n                    logger.log('iceConnectionState is failed, closing connections to ' + peerId);\n                    this.connection.emit(\n                        ConnectionEventType.Error,\n                        new Error('Negotiation of connection to ' + peerId + ' failed.')\n                    );\n                    this.connection.close();\n                    break;\n                case 'closed':\n                    logger.log('iceConnectionState is closed, closing connections to ' + peerId);\n                    this.connection.emit(ConnectionEventType.Error, new Error('Connection to ' + peerId + ' closed.'));\n                    this.connection.close();\n                    break;\n                case 'disconnected':\n                    logger.log('iceConnectionState is disconnected, closing connections to ' + peerId);\n                    this.connection.emit(\n                        ConnectionEventType.Error,\n                        new Error('Connection to ' + peerId + ' disconnected.')\n                    );\n                    this.connection.close();\n                    break;\n                case 'completed':\n                    peerConnection.onicecandidate = util.noop;\n                    break;\n            }\n\n            this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n        };\n\n        // DATACONNECTION.\n        logger.log('Listening for data channel');\n        // Fired between offer and answer, so options should already be saved\n        // in the options hash.\n        peerConnection.ondatachannel = (evt) => {\n            logger.log('Received data channel');\n\n            const dataChannel = evt.channel;\n            const connection = <DataConnection>provider.getConnection(peerId, connectionId);\n\n            connection.initialize(dataChannel);\n        };\n\n        // MEDIACONNECTION.\n        logger.log('Listening for remote stream');\n\n        // react-native-webrtc implements the old API.\n        peerConnection.onaddstream = (evt) => {\n            logger.log('Received remote stream', evt);\n\n            //peerConnection.ontrack = (evt) => {\n            //    logger.log('Received remote stream');\n\n            //const stream = evt.streams[0];\n            const stream = evt.stream;\n            const connection = provider.getConnection(peerId, connectionId);\n\n            if (connection.type === ConnectionType.Media) {\n                const mediaConnection = <MediaConnection>connection;\n\n                this._addStreamToMediaConnection(stream, mediaConnection);\n            }\n        };\n    }\n\n    cleanup(): void {\n        logger.log('Cleaning up PeerConnection to ' + this.connection.peer);\n\n        const peerConnection = this.connection.peerConnection;\n\n        if (!peerConnection) {\n            return;\n        }\n\n        this.connection.peerConnection = null;\n\n        //unsubscribe from all PeerConnection's events\n        peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.onaddstream = () => {};\n        const peerConnectionNotClosed = peerConnection.signalingState !== 'closed';\n        let dataChannelNotClosed = false;\n\n        if (this.connection.type === ConnectionType.Data) {\n            const dataConnection = <DataConnection>this.connection;\n            const dataChannel = dataConnection.dataChannel;\n\n            if (dataChannel) {\n                dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== 'closed';\n            }\n        }\n\n        if (peerConnectionNotClosed || dataChannelNotClosed) {\n            peerConnection.close();\n        }\n    }\n\n    private async _makeOffer(): Promise<void> {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n\n        try {\n            const offer = await peerConnection.createOffer(this.connection.options.constraints);\n\n            logger.log('Created offer.');\n\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n                offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n            }\n\n            try {\n                await peerConnection.setLocalDescription(offer);\n\n                logger.log('Set localDescription:', offer, `for:${this.connection.peer}`);\n\n                let payload: any = {\n                    sdp: offer,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    metadata: this.connection.metadata,\n                    browser: util.browser,\n                };\n\n                if (this.connection.type === ConnectionType.Data) {\n                    const dataConnection = <DataConnection>this.connection;\n\n                    payload = {\n                        ...payload,\n                        label: dataConnection.label,\n                        reliable: dataConnection.reliable,\n                        serialization: dataConnection.serialization,\n                    };\n                }\n\n                provider.socket.send({\n                    type: ServerMessageType.Offer,\n                    payload,\n                    dst: this.connection.peer,\n                });\n            } catch (err) {\n                // TODO: investigate why _makeOffer is being called from the answer\n                if (err != 'OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer') {\n                    provider.emitError(PeerErrorType.WebRTC, err);\n                    logger.log('Failed to setLocalDescription, ', err);\n                }\n            }\n        } catch (err_1) {\n            provider.emitError(PeerErrorType.WebRTC, err_1);\n            logger.log('Failed to createOffer, ', err_1);\n        }\n    }\n\n    private async _makeAnswer(): Promise<void> {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n\n        try {\n            const answer = await peerConnection.createAnswer();\n            logger.log('Created answer.');\n\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n                answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n            }\n\n            try {\n                await peerConnection.setLocalDescription(answer);\n\n                logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n                provider.socket.send({\n                    type: ServerMessageType.Answer,\n                    payload: {\n                        sdp: answer,\n                        type: this.connection.type,\n                        connectionId: this.connection.connectionId,\n                        browser: util.browser,\n                    },\n                    dst: this.connection.peer,\n                });\n            } catch (err) {\n                provider.emitError(PeerErrorType.WebRTC, err);\n                logger.log('Failed to setLocalDescription, ', err);\n            }\n        } catch (err_1) {\n            provider.emitError(PeerErrorType.WebRTC, err_1);\n            logger.log('Failed to create answer, ', err_1);\n        }\n    }\n\n    /** Handle an SDP. */\n    async handleSDP(type: string, sdp: any): Promise<void> {\n        sdp = new RTCSessionDescription(sdp);\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n\n        logger.log('Setting remote description', sdp);\n\n        const self = this;\n\n        try {\n            await peerConnection.setRemoteDescription(sdp);\n            logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n            if (type === 'OFFER') {\n                await self._makeAnswer();\n            }\n        } catch (err) {\n            provider.emitError(PeerErrorType.WebRTC, err);\n            logger.log('Failed to setRemoteDescription, ', err);\n        }\n    }\n\n    /** Handle a candidate. */\n    async handleCandidate(ice: any): Promise<void> {\n        logger.log(`handleCandidate:`, ice);\n\n        const candidate = ice.candidate;\n        const sdpMLineIndex = ice.sdpMLineIndex;\n        const sdpMid = ice.sdpMid;\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n\n        try {\n            await peerConnection.addIceCandidate(\n                new RTCIceCandidate({\n                    sdpMid: sdpMid,\n                    sdpMLineIndex: sdpMLineIndex,\n                    candidate: candidate,\n                })\n            );\n            logger.log(`Added ICE candidate for:${this.connection.peer}`);\n        } catch (err) {\n            provider.emitError(PeerErrorType.WebRTC, err);\n            logger.log('Failed to handleCandidate, ', err);\n        }\n    }\n\n    private _addTracksToConnection(stream: MediaStream, peerConnection: RTCPeerConnection): void {\n        logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n        // react-native-webrtc implements the old API.\n        if (!peerConnection.addStream) return `Your browser does't support RTCPeerConnection#addStream. Ignored.`;\n        //if (!peerConnection.addTrack) {\n        //    return logger.error(`Your browser does't support RTCPeerConnection#addTrack. Ignored.`);\n        //}\n\n        peerConnection.addStream(stream);\n        // stream.getTracks().forEach((track) => {\n        //     peerConnection.addTrack(track, stream);\n        // });\n    }\n\n    private _addStreamToMediaConnection(stream: MediaStream, mediaConnection: MediaConnection): void {\n        logger.log(`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`);\n\n        mediaConnection.addStream(stream);\n    }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n  readonly fileReader: FileReader = new FileReader();\n\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor() {\n    super();\n\n    this.fileReader.onload = (evt) => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = (evt) => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    }\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}","import { util } from './util';\nimport logger from './logger';\nimport { Negotiator } from './negotiator';\nimport { ConnectionType, ConnectionEventType, SerializationType, ServerMessageType } from './enums';\nimport { Peer } from './peer';\nimport { BaseConnection } from './baseconnection';\nimport { ServerMessage } from './servermessage';\nimport { EncodingQueue } from './encodingQueue';\nimport { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n    private static readonly ID_PREFIX = 'dc_';\n    private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n    private _negotiator: Negotiator;\n    readonly label: string;\n    readonly serialization: SerializationType;\n    readonly reliable: boolean;\n    stringify: (data: any) => string = JSON.stringify;\n    parse: (data: string) => any = JSON.parse;\n\n    get type() {\n        return ConnectionType.Data;\n    }\n\n    private _buffer: any[] = [];\n    private _bufferSize = 0;\n    private _buffering = false;\n    private _chunkedData: {\n        [id: number]: {\n            data: Blob[];\n            count: number;\n            total: number;\n        };\n    } = {};\n\n    private _dc: RTCDataChannel;\n    private _encodingQueue = new EncodingQueue();\n\n    get dataChannel(): RTCDataChannel {\n        return this._dc;\n    }\n\n    get bufferSize(): number {\n        return this._bufferSize;\n    }\n\n    constructor(peerId: string, provider: Peer, options: any) {\n        super(peerId, provider, options);\n\n        this.connectionId = this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n        this.label = this.options.label || this.connectionId;\n        this.serialization = this.options.serialization || SerializationType.JSON;\n        this.reliable = !!this.options.reliable;\n\n        this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n            this._bufferedSend(ab);\n        });\n\n        this._encodingQueue.on('error', () => {\n            logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n            this.close();\n        });\n\n        this._negotiator = new Negotiator(this);\n\n        this._negotiator.startConnection(\n            this.options._payload || {\n                originator: true,\n            }\n        );\n    }\n\n    /** Called by the Negotiator when the DataChannel is ready. */\n    initialize(dc: RTCDataChannel): void {\n        this._dc = dc;\n        this._configureDataChannel();\n    }\n\n    private _configureDataChannel(): void {\n        if (!util.supports.binaryBlob || util.supports.reliable) {\n            this.dataChannel.binaryType = 'arraybuffer';\n        }\n\n        this.dataChannel.onopen = () => {\n            logger.log(`DC#${this.connectionId} dc connection success`);\n            this._open = true;\n            this.emit(ConnectionEventType.Open);\n        };\n\n        this.dataChannel.onmessage = (e) => {\n            logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n            this._handleDataMessage(e);\n        };\n\n        this.dataChannel.onclose = () => {\n            logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n\n    // Handles a DataChannel message.\n    private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n        const datatype = data.constructor;\n\n        const isBinarySerialization =\n            this.serialization === SerializationType.Binary || this.serialization === SerializationType.BinaryUTF8;\n\n        let deserializedData: any = data;\n\n        if (isBinarySerialization) {\n            if (datatype === Blob) {\n                // Datatype should never be blob\n                util.blobToArrayBuffer(data as Blob, (ab) => {\n                    const unpackedData = util.unpack(ab);\n                    this.emit(ConnectionEventType.Data, unpackedData);\n                });\n                return;\n            } else if (datatype === ArrayBuffer) {\n                deserializedData = util.unpack(data as ArrayBuffer);\n            } else if (datatype === String) {\n                // String fallback for binary data for browsers that don't support binary yet\n                const ab = util.binaryStringToArrayBuffer(data as string);\n                deserializedData = util.unpack(ab);\n            }\n        } else if (this.serialization === SerializationType.JSON) {\n            deserializedData = this.parse(data as string);\n        }\n\n        // Check if we've chunked--if so, piece things back together.\n        // We're guaranteed that this isn't 0.\n        if (deserializedData.__peerData) {\n            this._handleChunk(deserializedData);\n            return;\n        }\n\n        super.emit(ConnectionEventType.Data, deserializedData);\n    }\n\n    private _handleChunk(data: { __peerData: number; n: number; total: number; data: Blob }): void {\n        const id = data.__peerData;\n        const chunkInfo = this._chunkedData[id] || {\n            data: [],\n            count: 0,\n            total: data.total,\n        };\n\n        chunkInfo.data[data.n] = data.data;\n        chunkInfo.count++;\n        this._chunkedData[id] = chunkInfo;\n\n        if (chunkInfo.total === chunkInfo.count) {\n            // Clean up before making the recursive call to `_handleDataMessage`.\n            delete this._chunkedData[id];\n\n            // We've received all the chunks--time to construct the complete data.\n            const data = new Blob(chunkInfo.data);\n            this._handleDataMessage({ data });\n        }\n    }\n\n    /**\n     * Exposed functionality for users.\n     */\n\n    /** Allows user to close connection. */\n    close(): void {\n        this._buffer = [];\n        this._bufferSize = 0;\n        this._chunkedData = {};\n\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n\n        if (this.provider) {\n            this.provider._removeConnection(this);\n\n            this.provider = null;\n        }\n\n        if (this.dataChannel) {\n            this.dataChannel.onopen = null;\n            this.dataChannel.onmessage = null;\n            this.dataChannel.onclose = null;\n            this._dc = null;\n        }\n\n        if (this._encodingQueue) {\n            this._encodingQueue.destroy();\n            this._encodingQueue.removeAllListeners();\n            this._encodingQueue = null;\n        }\n\n        if (!this.open) {\n            return;\n        }\n\n        this._open = false;\n\n        super.emit(ConnectionEventType.Close);\n    }\n\n    /** Allows user to send data. */\n    send(data: any, chunked?: boolean): void {\n        if (!this.open) {\n            super.emit(\n                ConnectionEventType.Error,\n                new Error('Connection is not open. You should listen for the `open` event before sending messages.')\n            );\n            return;\n        }\n\n        if (this.serialization === SerializationType.JSON) {\n            this._bufferedSend(this.stringify(data));\n        } else if (\n            this.serialization === SerializationType.Binary ||\n            this.serialization === SerializationType.BinaryUTF8\n        ) {\n            const blob = util.pack(data);\n\n            if (!chunked && blob.size > util.chunkedMTU) {\n                this._sendChunks(blob);\n                return;\n            }\n\n            if (!util.supports.binaryBlob) {\n                // We only do this if we really need to (e.g. blobs are not supported),\n                // because this conversion is costly.\n                this._encodingQueue.enque(blob);\n            } else {\n                this._bufferedSend(blob);\n            }\n        } else {\n            this._bufferedSend(data);\n        }\n    }\n\n    private _bufferedSend(msg: any): void {\n        if (this._buffering || !this._trySend(msg)) {\n            this._buffer.push(msg);\n            this._bufferSize = this._buffer.length;\n        }\n    }\n\n    // Returns true if the send succeeds.\n    private _trySend(msg: any): boolean {\n        if (!this.open) {\n            return false;\n        }\n\n        if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n            this._buffering = true;\n            setTimeout(() => {\n                this._buffering = false;\n                this._tryBuffer();\n            }, 50);\n\n            return false;\n        }\n\n        try {\n            this.dataChannel.send(msg);\n        } catch (e) {\n            logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n            this._buffering = true;\n\n            this.close();\n\n            return false;\n        }\n\n        return true;\n    }\n\n    // Try to send the first message in the buffer.\n    private _tryBuffer(): void {\n        if (!this.open) {\n            return;\n        }\n\n        if (this._buffer.length === 0) {\n            return;\n        }\n\n        const msg = this._buffer[0];\n\n        if (this._trySend(msg)) {\n            this._buffer.shift();\n            this._bufferSize = this._buffer.length;\n            this._tryBuffer();\n        }\n    }\n\n    private _sendChunks(blob: Blob): void {\n        const blobs = util.chunk(blob);\n        logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n        for (let blob of blobs) {\n            this.send(blob, true);\n        }\n    }\n\n    handleMessage(message: ServerMessage): void {\n        const payload = message.payload;\n\n        switch (message.type) {\n            case ServerMessageType.Answer:\n                this._negotiator.handleSDP(message.type, payload.sdp);\n                break;\n            case ServerMessageType.Candidate:\n                this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                logger.warn('Unrecognized message type:', message.type, 'from peer:', this.peer);\n                break;\n        }\n    }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n","import { EventEmitter } from 'eventemitter3';\nimport { util } from './util';\nimport logger, { LogLevel } from './logger';\nimport { Socket } from './socket';\nimport { MediaConnection } from './mediaconnection';\nimport { DataConnection } from './dataconnection';\nimport { ConnectionType, PeerErrorType, PeerEventType, SocketEventType, ServerMessageType } from './enums';\nimport { BaseConnection } from './baseconnection';\nimport { ServerMessage } from './servermessage';\nimport { API } from './api';\nimport { PeerConnectOption, PeerJSOption } from '..';\n\nclass PeerOptions implements PeerJSOption {\n    debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n    host?: string;\n    port?: number;\n    path?: string;\n    key?: string;\n    token?: string;\n    config?: any;\n    secure?: boolean;\n    pingInterval?: number;\n    logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n    private static readonly DEFAULT_KEY = 'peerjs';\n\n    private readonly _options: PeerOptions;\n    private readonly _api: API;\n    private readonly _socket: Socket;\n\n    private _id: string | null = null;\n    private _lastServerId: string | null = null;\n\n    // States.\n    private _destroyed = false; // Connections have been killed\n    private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n    private _open = false; // Sockets and such are not yet open.\n    private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n    private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n    get id() {\n        return this._id;\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    get open() {\n        return this._open;\n    }\n\n    get socket() {\n        return this._socket;\n    }\n\n    /**\n     * @deprecated\n     * Return type will change from Object to Map<string,[]>\n     */\n    get connections(): Object {\n        const plainConnections = Object.create(null);\n\n        for (let [k, v] of this._connections) {\n            plainConnections[k] = v;\n        }\n\n        return plainConnections;\n    }\n\n    get destroyed() {\n        return this._destroyed;\n    }\n    get disconnected() {\n        return this._disconnected;\n    }\n\n    constructor(id?: string | PeerOptions, options?: PeerOptions) {\n        super();\n\n        let userId: string | undefined;\n\n        // Deal with overloading\n        if (id && id.constructor == Object) {\n            options = id as PeerOptions;\n        } else if (id) {\n            userId = id.toString();\n        }\n\n        // Configurize options\n        options = {\n            debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n            host: util.CLOUD_HOST,\n            port: util.CLOUD_PORT,\n            path: '/',\n            key: Peer.DEFAULT_KEY,\n            token: util.randomToken(),\n            config: util.defaultConfig,\n            ...options,\n        };\n        this._options = options;\n\n        // Detect relative URL host.\n        // if (this._options.host === \"/\") {\n        //   this._options.host = window.location.hostname;\n        // }\n\n        // Set path correctly.\n        if (this._options.path) {\n            if (this._options.path[0] !== '/') {\n                this._options.path = '/' + this._options.path;\n            }\n            if (this._options.path[this._options.path.length - 1] !== '/') {\n                this._options.path += '/';\n            }\n        }\n\n        // Set whether we use SSL to same as current host\n        if (this._options.secure === undefined && this._options.host !== util.CLOUD_HOST) {\n            this._options.secure = util.isSecure();\n        } else if (this._options.host == util.CLOUD_HOST) {\n            this._options.secure = true;\n        }\n        // Set a custom log function if present\n        if (this._options.logFunction) {\n            logger.setLogFunction(this._options.logFunction);\n        }\n\n        logger.logLevel = this._options.debug || 0;\n\n        this._api = new API(options);\n        this._socket = this._createServerConnection();\n\n        // Sanity checks\n        // Ensure WebRTC supported\n        if (!util.supports.audioVideo && !util.supports.data) {\n            this._delayedAbort(PeerErrorType.BrowserIncompatible, 'The current browser does not support WebRTC');\n            return;\n        }\n\n        // Ensure alphanumeric id\n        if (!!userId && !util.validateId(userId)) {\n            this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n            return;\n        }\n\n        if (userId) {\n            this._initialize(userId);\n        } else {\n            this._api\n                .retrieveId()\n                .then((id) => this._initialize(id))\n                .catch((error) => this._abort(PeerErrorType.ServerError, error));\n        }\n    }\n\n    private _createServerConnection(): Socket {\n        const socket = new Socket(\n            this._options.secure,\n            this._options.host!,\n            this._options.port!,\n            this._options.path!,\n            this._options.key!,\n            this._options.pingInterval\n        );\n\n        socket.on(SocketEventType.Message, (data: ServerMessage) => {\n            this._handleMessage(data);\n        });\n\n        socket.on(SocketEventType.Error, (error: string) => {\n            this._abort(PeerErrorType.SocketError, error);\n        });\n\n        socket.on(SocketEventType.Disconnected, () => {\n            if (this.disconnected) {\n                return;\n            }\n\n            this.emitError(PeerErrorType.Network, 'Lost connection to server.');\n            this.disconnect();\n        });\n\n        socket.on(SocketEventType.Close, () => {\n            if (this.disconnected) {\n                return;\n            }\n\n            this._abort(PeerErrorType.SocketClosed, 'Underlying socket is already closed.');\n        });\n\n        return socket;\n    }\n\n    /** Initialize a connection with the server. */\n    private _initialize(id: string): void {\n        this._id = id;\n        this.socket.start(id, this._options.token!);\n    }\n\n    /** Handles messages from the server. */\n    private _handleMessage(message: ServerMessage): void {\n        const type = message.type;\n        const payload = message.payload;\n        const peerId = message.src;\n\n        switch (type) {\n            case ServerMessageType.Open: // The connection to the server is open.\n                this._lastServerId = this.id;\n                this._open = true;\n                this.emit(PeerEventType.Open, this.id);\n                break;\n            case ServerMessageType.Error: // Server error.\n                this._abort(PeerErrorType.ServerError, payload.msg);\n                break;\n            case ServerMessageType.IdTaken: // The selected ID is taken.\n                this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n                break;\n            case ServerMessageType.InvalidKey: // The given API key cannot be found.\n                this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n                break;\n            case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n                logger.log(`Received leave message from ${peerId}`);\n                this._cleanupPeer(peerId);\n                this._connections.delete(peerId);\n                break;\n            case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n                this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n                break;\n            case ServerMessageType.Offer: {\n                // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n                const connectionId = payload.connectionId;\n                let connection = this.getConnection(peerId, connectionId);\n\n                if (connection) {\n                    connection.close();\n                    logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n                }\n\n                // Create a new connection.\n                if (payload.type === ConnectionType.Media) {\n                    connection = new MediaConnection(peerId, this, {\n                        connectionId: connectionId,\n                        _payload: payload,\n                        metadata: payload.metadata,\n                    });\n                    this._addConnection(peerId, connection);\n                    this.emit(PeerEventType.Call, connection);\n                } else if (payload.type === ConnectionType.Data) {\n                    connection = new DataConnection(peerId, this, {\n                        connectionId: connectionId,\n                        _payload: payload,\n                        metadata: payload.metadata,\n                        label: payload.label,\n                        serialization: payload.serialization,\n                        reliable: payload.reliable,\n                    });\n                    this._addConnection(peerId, connection);\n                    this.emit(PeerEventType.Connection, connection);\n                } else {\n                    logger.warn(`Received malformed connection type:${payload.type}`);\n                    return;\n                }\n\n                // Find messages.\n                const messages = this._getMessages(connectionId);\n                for (let message of messages) {\n                    connection.handleMessage(message);\n                }\n\n                break;\n            }\n            default: {\n                if (!payload) {\n                    logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n                    return;\n                }\n\n                const connectionId = payload.connectionId;\n                const connection = this.getConnection(peerId, connectionId);\n\n                if (connection && connection.peerConnection) {\n                    // Pass it on.\n                    connection.handleMessage(message);\n                } else if (connectionId) {\n                    // Store for possible later use\n                    this._storeMessage(connectionId, message);\n                } else {\n                    logger.warn('You received an unrecognized message:', message);\n                }\n                break;\n            }\n        }\n    }\n\n    /** Stores messages without a set up connection, to be claimed later. */\n    private _storeMessage(connectionId: string, message: ServerMessage): void {\n        if (!this._lostMessages.has(connectionId)) {\n            this._lostMessages.set(connectionId, []);\n        }\n\n        this._lostMessages.get(connectionId).push(message);\n    }\n\n    /** Retrieve messages from lost message store */\n    //TODO Change it to private\n    public _getMessages(connectionId: string): ServerMessage[] {\n        const messages = this._lostMessages.get(connectionId);\n\n        if (messages) {\n            this._lostMessages.delete(connectionId);\n            return messages;\n        }\n\n        return [];\n    }\n\n    /**\n     * Returns a DataConnection to the specified peer. See documentation for a\n     * complete list of options.\n     */\n    connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n        if (this.disconnected) {\n            logger.warn(\n                'You cannot connect to a new Peer because you called ' +\n                    '.disconnect() on this Peer and ended your connection with the ' +\n                    'server. You can create a new Peer to reconnect, or call reconnect ' +\n                    'on this peer if you believe its ID to still be available.'\n            );\n            this.emitError(PeerErrorType.Disconnected, 'Cannot connect to new Peer after disconnecting from server.');\n            return;\n        }\n\n        const dataConnection = new DataConnection(peer, this, options);\n        this._addConnection(peer, dataConnection);\n        return dataConnection;\n    }\n\n    /**\n     * Returns a MediaConnection to the specified peer. See documentation for a\n     * complete list of options.\n     */\n    call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n        if (this.disconnected) {\n            logger.warn(\n                'You cannot connect to a new Peer because you called ' +\n                    '.disconnect() on this Peer and ended your connection with the ' +\n                    'server. You can create a new Peer to reconnect.'\n            );\n            this.emitError(PeerErrorType.Disconnected, 'Cannot connect to new Peer after disconnecting from server.');\n            return;\n        }\n\n        if (!stream) {\n            logger.error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n            return;\n        }\n\n        options._stream = stream;\n\n        const mediaConnection = new MediaConnection(peer, this, options);\n        this._addConnection(peer, mediaConnection);\n        return mediaConnection;\n    }\n\n    /** Add a data/media connection to this peer. */\n    private _addConnection(peerId: string, connection: BaseConnection): void {\n        logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n        if (!this._connections.has(peerId)) {\n            this._connections.set(peerId, []);\n        }\n        this._connections.get(peerId).push(connection);\n    }\n\n    //TODO should be private\n    _removeConnection(connection: BaseConnection): void {\n        const connections = this._connections.get(connection.peer);\n\n        if (connections) {\n            const index = connections.indexOf(connection);\n\n            if (index !== -1) {\n                connections.splice(index, 1);\n            }\n        }\n\n        //remove from lost messages\n        this._lostMessages.delete(connection.connectionId);\n    }\n\n    /** Retrieve a data/media connection for this peer. */\n    getConnection(peerId: string, connectionId: string): null | BaseConnection {\n        const connections = this._connections.get(peerId);\n        if (!connections) {\n            return null;\n        }\n\n        for (let connection of connections) {\n            if (connection.connectionId === connectionId) {\n                return connection;\n            }\n        }\n\n        return null;\n    }\n\n    private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n        setTimeout(() => {\n            this._abort(type, message);\n        }, 0);\n    }\n\n    /**\n     * Emits an error message and destroys the Peer.\n     * The Peer is not destroyed if it's in a disconnected state, in which case\n     * it retains its disconnected state and its existing connections.\n     */\n    private _abort(type: PeerErrorType, message: string | Error): void {\n        logger.error('Aborting!');\n\n        this.emitError(type, message);\n\n        if (!this._lastServerId) {\n            this.destroy();\n        } else {\n            this.disconnect();\n        }\n    }\n\n    /** Emits a typed error message. */\n    emitError(type: PeerErrorType, err: string | Error): void {\n        logger.error('Error:', err);\n\n        let error: Error & { type?: PeerErrorType };\n\n        if (typeof err === 'string') {\n            error = new Error(err);\n        } else {\n            error = err as Error;\n        }\n\n        error.type = type;\n\n        this.emit(PeerEventType.Error, error);\n    }\n\n    /**\n     * Destroys the Peer: closes all active connections as well as the connection\n     *  to the server.\n     * Warning: The peer can no longer create or accept connections after being\n     *  destroyed.\n     */\n    destroy(): void {\n        if (this.destroyed) {\n            return;\n        }\n\n        logger.log(`Destroy peer with ID:${this.id}`);\n\n        this.disconnect();\n        this._cleanup();\n\n        this._destroyed = true;\n\n        this.emit(PeerEventType.Close);\n    }\n\n    /** Disconnects every connection on this peer. */\n    private _cleanup(): void {\n        for (let peerId of this._connections.keys()) {\n            this._cleanupPeer(peerId);\n            this._connections.delete(peerId);\n        }\n\n        this.socket.removeAllListeners();\n    }\n\n    /** Closes all connections to this peer. */\n    private _cleanupPeer(peerId: string): void {\n        const connections = this._connections.get(peerId);\n\n        if (!connections) return;\n\n        for (let connection of connections) {\n            connection.close();\n        }\n    }\n\n    /**\n     * Disconnects the Peer's connection to the PeerServer. Does not close any\n     *  active connections.\n     * Warning: The peer can no longer create or accept connections after being\n     *  disconnected. It also cannot reconnect to the server.\n     */\n    disconnect(): void {\n        if (this.disconnected) {\n            return;\n        }\n\n        const currentId = this.id;\n\n        logger.log(`Disconnect peer with ID:${currentId}`);\n\n        this._disconnected = true;\n        this._open = false;\n\n        this.socket.close();\n\n        this._lastServerId = currentId;\n        this._id = null;\n\n        this.emit(PeerEventType.Disconnected, currentId);\n    }\n\n    /** Attempts to reconnect with the same ID. */\n    reconnect(): void {\n        if (this.disconnected && !this.destroyed) {\n            logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n            this._disconnected = false;\n            this._initialize(this._lastServerId!);\n        } else if (this.destroyed) {\n            throw new Error('This peer cannot reconnect to the server. It has already been destroyed.');\n        } else if (!this.disconnected && !this.open) {\n            // Do nothing. We're still connecting the first time.\n            logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n        } else {\n            throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n        }\n    }\n\n    /**\n     * Get a list of available peer IDs. If you're running your own server, you'll\n     * want to set allow_discovery: true in the PeerServer options. If you're using\n     * the cloud server, email team@peerjs.com to get the functionality enabled for\n     * your key.\n     */\n    listAllPeers(cb = (_: any[]) => {}): void {\n        this._api\n            .listAllPeers()\n            .then((peers) => cb(peers))\n            .catch((error) => this._abort(PeerErrorType.ServerError, error));\n    }\n}\n","import { util } from './util';\nimport { Peer } from './peer';\n\nexport const peerjs = {\n    Peer,\n    util,\n};\n\nexport default Peer;\n\nmodule.exports = Peer;\n\n// (<any>window).peerjs = peerjs;\n// /** @deprecated Should use peerjs namespace */\n// (<any>window).Peer = Peer;\n"]}